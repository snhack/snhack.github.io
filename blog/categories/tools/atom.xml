<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: tools | Swindon Hackspace]]></title>
  <link href="http://swindon.hackspace.org.uk/blog/categories/tools/atom.xml" rel="self"/>
  <link href="http://swindon.hackspace.org.uk/"/>
  <updated>2016-03-05T14:39:08+00:00</updated>
  <id>http://swindon.hackspace.org.uk/</id>
  <author>
    <name><![CDATA[Swindon Hackspace]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Resources for Using Git]]></title>
    <link href="http://swindon.hackspace.org.uk/blog/resources-for-using-git/"/>
    <updated>2012-09-29T20:35:00+01:00</updated>
    <id>http://swindon.hackspace.org.uk/blog/resources-for-using-git</id>
    <content type="html"><![CDATA[<p>Here’s some basic resources to get started pushing code to github.</p>

<p>Note: As well as computer source code, git is useful for tracking changes to anything that can be represented as plain text, e.g. <a href="http://www.wired.com/wiredenterprise/2012/08/bundestag/">German Law</a>.</p>

<p>The simplest use of git is to create the repo locally, stored in the same folder as the source (known as the working tree) and named <code>.git</code>.</p>

<!-- more -->

<p>To <a href="http://git-scm.com/docs/git-init">initialise</a> a new git repo, simply run <code>git-init</code>.</p>

<p><code>sh
$ cd my-project
$ git init
Initialized empty Git repository in my-project/.git/
</code></p>

<p><a href="http://git-scm.com/docs/git-add">Add</a> any new or changed files you want to track, then <a href="http://git-scm.com/docs/git-commit">commit</a> those changes to the repo, along with a <a href="http://xkcd.com/1296/">descriptive</a> message.</p>

<p><code>sh
$ echo About My-Project &gt; README.md
$ git add . # add all files recursively
$ git commit -m 'First Commit'
[master (root-commit) cdab15f] First Commit
 1 file changed, 1 insertion(+)
 create mode 100644 README.md
</code></p>

<p><a href="http://git-scm.com/docs/git-log">View recent commits</a> using <code>git log</code>.</p>

<p>``` sh
$ git log
commit cdab15f2036b0b8b1c8fbfceab6357c8e56a0d5f
Author: Jamie Osborne <a href="&#109;&#097;&#105;&#108;&#116;&#111;:&#106;&#109;&#101;&#111;&#115;&#098;&#110;&#064;&#121;&#111;&#117;&#114;&#045;&#101;&#109;&#097;&#105;&#108;&#046;&#099;&#111;&#109;">&#106;&#109;&#101;&#111;&#115;&#098;&#110;&#064;&#121;&#111;&#117;&#114;&#045;&#101;&#109;&#097;&#105;&#108;&#046;&#099;&#111;&#109;</a>
Date:   Sat Sep 29 23:30:20 2012 +0100</p>

<pre><code>First Commit ```
</code></pre>

<h2 id="online-collaboration">online collaboration</h2>

<p>To collaborate on a project using Git, an online service such as
<a href="http://github.com/">Github</a> is used to hold a repo and allow others to access it. To
propose changes to somebody else’s repo, a <a href="https://help.github.com/articles/fork-a-repo">fork</a> <code>-&gt;</code> <a href="https://help.github.com/articles/branching-out/">branch</a> <code>-&gt;</code> <a href="https://help.github.com/articles/using-pull-requests">pull-request</a> process is used.</p>

<ul>
  <li>
    <p>First <a href="https://help.github.com/articles/fork-a-repo">fork</a> a new personal copy of the existing repo, then <a href="https://help.github.com/articles/importing-a-git-repository-using-the-command-line/">clone</a> that new fork onto
your local computer.</p>
  </li>
  <li>
    <p>A new “topic” <a href="https://help.github.com/articles/branching-out/">branch</a> should be used for each pull request. Commiting directly to the <code>master</code> branch (or any other branch that recieves commits by others) will likely complicate merging of your commits upstream - as will mixing unrelated changes
into the same branch.</p>

    <p><em>Note that all additional commits made to a branch will automatically be added to a
pull request made with that branch.</em> This makes it really easy to add commits to a pull
request - just be careful not to commit any unrelated work to a branch that’s already
used in an open pull request.</p>
  </li>
  <li>
    <p>Once you have committed some changes to the new branch, and <a href="https://help.github.com/articles/pushing-to-a-remote/">pushed</a> those changes to
Github, use the Github website to send a <a href="https://help.github.com/articles/using-pull-requests">pull request</a> to the project’s owner.</p>

    <p>You can view the progress of your pull request in it’s <a href="https://github.com/snhack/snhack.github.com/issues">discussion thread</a>, where you
may get feedback on your changes before they can be merged. Notifications will normally
be sent by email to those active or mentioned in the thread, as well as those watching
either the thread or the related repo.</p>
  </li>
</ul>

<h2 id="documentation">documentation</h2>

<p>Git itself can be installed from <a href="http://git-scm.com/downloads">git-scm.com</a> if your OS doesn’t already include it. The same site also hosts a copy of the <a href="http://git-scm.com/docs">documentation</a>, as well as the <a href="http://git-scm.com/book">Pro Git book</a> which is a great place to start learning git.  Pro Git is also available as a commercially <a href="http://www.amazon.com/gp/product/1430218339?ie=UTF8&amp;tag=prgi-20&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=1430218339">printed book</a> from Apress, and as a free <a href="https://github.s3.amazonaws.com/media/progit.epub">ePub</a>, <a href="https://github.s3.amazonaws.com/media/pro-git.en.mobi">mobi</a>, or <a href="https://github.s3.amazonaws.com/media/progit.en.pdf">PDF</a> download.</p>

<p>If you don’t fancy reading an entire book, then this <a href="http://www.vogella.com/articles/Git/article.html">Git Tutorial</a> gets straight to the point for those already familiar with the concepts of version control.  There’s minimal explanatory text, but full command examples for most operations; making it a useful resource for commands you use rarely and need to quickly relearn.  Also, <a href="http://wildlyinaccurate.com/a-hackers-guide-to-git">A Hacker’s Guide to Git</a> is <a href="https://twitter.com/astrofraggle/status/471596975612502016">recommended</a> as being very readable.</p>

<p>Github’s <a href="http://help.github.com">help site</a> has some good pages on using both git, and the github website.  In particular, see <a href="https://help.github.com/categories/54/articles">Github Bootcamp</a> for links to the basics, and <a href="https://try.github.io/">Try Git</a> for a live tutorial.</p>

<h2 id="graphical-interfaces">graphical interfaces</h2>

<p>While it’s good to know how to use git from the command line, it’s worth getting a GUI for easier building of commits etc. (you could also integrate it with your favourite editor and diff viewer)</p>

<p><a href="http://github.com/">Github</a> offers their own <a href="http://mac.github.com/">Mac</a> and <a href="http://windows.github.com/">Windows</a> GUI clients, which have the advantage of closer integration with some of github’s features, such as organisations and the “Clone in Windows/Mac” button found on each repo on github.</p>

<p><img src="promo-screenshot.png" alt="GitHub for Mac" /></p>

<p>They do lack some more advanced features though so I mostly prefer <a href="http://gitx.laullon.com/">GitX</a> on the Mac. Plenty more GUIs exist <a href="http://git-scm.com/downloads/guis">on various platforms</a>, including <a href="http://www.sourcetreeapp.com/">SourceTree</a> and <a href="http://www.syntevo.com/smartgithg/">SmartGit</a>.</p>

<p><img src="commit.png" alt="GitX" /></p>

<h2 id="other-info">other info</h2>

<p>Btw, if you just want to share some code snippets somewhere while maintaining versioning etc., then check out <a href="https://gist.github.com/">gists</a>, a feature of github.</p>

<p><em>This article was originally posted at: <a href="http://jmeosbn.github.com/blog/resources-for-using-git/">http://jmeosbn.github.com</a></em></p>
]]></content>
  </entry>
  
</feed>
