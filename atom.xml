<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Swindon Hackspace]]></title>
  <link href="http://swindon.hackspace.org.uk/atom.xml" rel="self"/>
  <link href="http://swindon.hackspace.org.uk/"/>
  <updated>2015-03-26T22:54:36+00:00</updated>
  <id>http://swindon.hackspace.org.uk/</id>
  <author>
    <name><![CDATA[Swindon Hackspace]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How to 3D Print with Flexible Filaments]]></title>
    <link href="http://swindon.hackspace.org.uk/blog/how-to-3D-print-with-flexible-filaments/"/>
    <updated>2014-11-19T21:20:00+00:00</updated>
    <id>http://swindon.hackspace.org.uk/blog/how-to-3D-print-with-flexible-filaments</id>
    
    <author>
      <name><![CDATA[Steve Wood, AKA Gyrobot]]></name>
    </author>
    
    <content type="html"><![CDATA[<p>The saying, “You cannot push on a rope” remains as apt as ever when it comes to 3D printing with flexible filaments. Most printers will have some form of success straight out of the box with flexible filaments, but don’t be greedy to begin with, turn the printing speed right down. Within this article I will try to explain as best as I can the problems, pitfalls to avoid and how to achieve success with pushing on a rope to achieve good print quality at acceptable speeds, in this case substituting the rope for flexible and elastic filaments for 3D printing such as <a href="http://recreus.com/en/">Filaflex</a>.</p>

<!-- more -->

<h2 id="what-is-flexible-filament">What is Flexible Filament?</h2>

<p>A flexible filament is generally a Polyurethane or Co-Polyester (not exclusively) Thermoplastic Elastomer (TPE) with a complex mix of additives/colourants to aid the 3D printing process. With good elastic properties and high co-efficient of friction means 3D printed designs in this filament expand the design possibilities. Effectively it is a soft stretchy grippy material.</p>

<p><a href="http://swindon.hackspace.org.uk/blog/how-to-3D-print-with-flexible-filaments/15.jpg"><img src="http://swindon.hackspace.org.uk/blog/how-to-3D-print-with-flexible-filaments/15.jpg" alt="A Bouncy Die" /></a></p>

<h2 id="first-print">First Print</h2>

<p>I know the feeling, you have just took delivery of your first reel of flexible filament, you load it into the printer, if you get as far as heating up the hot-end and actually getting to press the print button, then you have done well. My first time, the filament didn’t even feed down into the hot-end successfully but came out of the side of the extruder from the hobbed shaft area making the usual spaghetti mess. I thought there would be a problem, because the first item on my hit list was a previously noted gap between the hobbed shaft and the entry into the hot end is a whopping 10mm.</p>

<h2 id="problem-1---unconstrained-filament">Problem #1 - Unconstrained Filament</h2>

<p><a href="http://swindon.hackspace.org.uk/blog/how-to-3D-print-with-flexible-filaments/27.png"><img src="http://swindon.hackspace.org.uk/blog/how-to-3D-print-with-flexible-filaments/27.png" alt="Extruder Problem" /></a></p>

<p>If a gap exists between the extruder drive gear (or hobbed shaft) and the entry hole of the hot end, then the filament can buckle and once the buckling process has started then it’s too late and the filament will find a way out of the extruder sideways. If left unattended for a significant time, a flexible birds nest will have entombed your printer probably jamming a few axes motors in the process, which is not a wise move.</p>

<p>Even a small gap can have issues :</p>

<p><a href="http://swindon.hackspace.org.uk/blog/how-to-3D-print-with-flexible-filaments/30.jpg"><img src="http://swindon.hackspace.org.uk/blog/how-to-3D-print-with-flexible-filaments/30.jpg" alt="Extruder Problem" /></a></p>

<h2 id="solution-1">Solution #1</h2>

<p><a href="http://swindon.hackspace.org.uk/blog/how-to-3D-print-with-flexible-filaments/28.png"><img src="http://swindon.hackspace.org.uk/blog/how-to-3D-print-with-flexible-filaments/28.png" alt="Extruder Solution" /></a></p>

<p>This gap needs to be closed up so the filament is constrained all the way into the hot end and cannot collapse sideways. You can see an example of this in the image above.</p>

<p>There are several ways to achieve this and your individual extruder may vary and it may/may not be possible to achieve on some printers.</p>

<ol>
  <li>
    <p>Retrofit an extra support insert into the extruder.</p>

    <ul>
      <li>
        <p>An example of retrofit supports :</p>

        <ul>
          <li>
            <p><a href="http://www.thingiverse.com/thing:247024">Second filament guide for Jigsaw extruder</a></p>
          </li>
          <li>
            <p><a href="http://www.thingiverse.com/thing:191503">Printrbot Simple V2 flexible filament guide</a></p>
          </li>
          <li>
            <p><a href="http://www.thingiverse.com/thing:16319">V9 Extruder Filament Guide 1,75mm</a></p>
          </li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p>Reprint yourself a new extruder design with built in filament support.</p>

    <ul>
      <li>
        <p>There are many of these upgrades including several I have designed myself as part of “<a href="http://www.thingiverse.com/thing:307021">Gyrobot’s Extruder Week</a>”:</p>

        <ul>
          <li>
            <p><a href="http://www.thingiverse.com/thing:307142">Recreus Extruder - Base Mountable</a></p>
          </li>
          <li>
            <p><a href="http://www.thingiverse.com/thing:307218">Micro DUAL/QUAD Extruder</a></p>
          </li>
          <li>
            <p><a href="http://www.thingiverse.com/thing:231310">Mk8 Spring loaded Drive Block Replicator 1 / Duplicator 4 / FlashForge / CTC</a> : </p>

            <p><a href="http://swindon.hackspace.org.uk/blog/how-to-3D-print-with-flexible-filaments/31.jpg"><img src="http://swindon.hackspace.org.uk/blog/how-to-3D-print-with-flexible-filaments/31.jpg" alt="Extruder Solution" /></a></p>
          </li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p>Purchase an off the shelf extruder and hot end which is flexible filament compatible, such as the <a href="http://recreus.com/en">Recreus</a> Extruder which has achieved flexible printing speeds of 120mm/s (Due Nov 2014):</p>
  </li>
</ol>

<p><a href="http://swindon.hackspace.org.uk/blog/how-to-3D-print-with-flexible-filaments/29.png"><img src="http://swindon.hackspace.org.uk/blog/how-to-3D-print-with-flexible-filaments/29.png" alt="Recreus Extruder" /></a></p>

<p><a href="http://swindon.hackspace.org.uk/blog/how-to-3D-print-with-flexible-filaments/30.png"><img src="http://swindon.hackspace.org.uk/blog/how-to-3D-print-with-flexible-filaments/30.png" alt="Recreus Extruder" /></a></p>

<h2 id="problem-2---friction">Problem #2 - Friction</h2>

<p>Excessive filament friction is the enemy for flexible printing, it can cause more pressure on the drive gear consequently more filament feed problems can happen as a result. Both excessive friction before and after the drive gear can result in issues.</p>

<h2 id="solution-2">Solution #2</h2>

<h3 id="before-the-drive-gear">Before the Drive Gear</h3>

<p>If possible, feed the flexible filament directly into the Extruder, without a using a feed tube. Ideally from above at a height of 12” or more from the printer, the higher the better. This will provide an unrestricted path, with gravity on your side. If you have to use a feed tube, make sure it is PTFE (low friction) rather than Silicon, fuel line or pneumatic pipe etc. Avoid any sharp turns or kinks in the tube, and allow the filament to enter the tube as straight as possible. It is unfortunate that that latest generation of some popular printers have the most convoluted path you could probably imagine.</p>

<h3 id="after-the-drive-gear">After the Drive gear</h3>

<ol>
  <li>
    <p>Keep this length as short as possible to the hot end. Pushing a flexible filament into a hot end will result in compression and it’s diameter will increase as a result. Couple this with the thermal expansion of the filament inside the hot end and the pressure increases, miss feeds are the result. A Bowden style extruder are most problematic for this reason. I would suggest mounting the drive extruder above the printer rather than off to the side or rear, gravity will help in this case. Also for Bowden, as above, use a PTFE feed tube, and is also best with a 3mm diameter filament for fasted printing speeds, 1.75mm will work, again much slower though.</p>
  </li>
  <li>
    <p>Insert a PTFE liner into the hot end barrel:</p>

    <p>Thermal Expansion Problem :</p>

    <p><a href="http://swindon.hackspace.org.uk/blog/how-to-3D-print-with-flexible-filaments/32.png"><img src="http://swindon.hackspace.org.uk/blog/how-to-3D-print-with-flexible-filaments/32.png" alt="Hot End Problem" /></a></p>

    <p>Thermal Expansion Solution :</p>

    <p><a href="http://swindon.hackspace.org.uk/blog/how-to-3D-print-with-flexible-filaments/33.png"><img src="http://swindon.hackspace.org.uk/blog/how-to-3D-print-with-flexible-filaments/33.png" alt="Hot End Solution" /></a></p>

    <p>The PTFE liner, reduces friction and acts a thermal break to insulate the filament until it enters the hot-end so the diameter doesn’t expand too early:</p>

    <p><a href="http://swindon.hackspace.org.uk/blog/how-to-3D-print-with-flexible-filaments/35.jpg"><img src="http://swindon.hackspace.org.uk/blog/how-to-3D-print-with-flexible-filaments/35.jpg" alt="PTFE Lined Barrel" /></a></p>

    <p>Drilling out a hot-end barrel, lathe not necessary, a standard hand drill can be used instead:</p>

    <p><a href="http://swindon.hackspace.org.uk/blog/how-to-3D-print-with-flexible-filaments/34.jpg"><img src="http://swindon.hackspace.org.uk/blog/how-to-3D-print-with-flexible-filaments/34.jpg" alt="Drilling Out a Barrel" /></a></p>

    <p>In the following photos, you can even see that the PTFE liner extends all the way up to the drive gear. This is the solution for an <a href="http://mendel-parts.com/">Orca 0.43</a> and <a href="http://www.thingiverse.com/thing:99395">my make</a> of JackT’s <a href="http://www.thingiverse.com/thing:99395">ORCA 0.43 Extruderderivate</a> on Thingiverse.</p>

    <p><a href="http://swindon.hackspace.org.uk/blog/how-to-3D-print-with-flexible-filaments/36.jpg"><img src="http://swindon.hackspace.org.uk/blog/how-to-3D-print-with-flexible-filaments/36.jpg" alt="Full Filament Support" /></a></p>

    <p><a href="http://swindon.hackspace.org.uk/blog/how-to-3D-print-with-flexible-filaments/37.jpg"><img src="http://swindon.hackspace.org.uk/blog/how-to-3D-print-with-flexible-filaments/37.jpg" alt="Full Filament Support" /></a></p>

    <p><a href="http://swindon.hackspace.org.uk/blog/how-to-3D-print-with-flexible-filaments/38.jpg"><img src="http://swindon.hackspace.org.uk/blog/how-to-3D-print-with-flexible-filaments/38.jpg" alt="Full Filament Support" /></a></p>
  </li>
</ol>

<p><strong>WARNING : The maximum printing temperature for PTFE lined hot-end is about 265deg C.</strong></p>

<h2 id="problem-3---hotend-pressure">Problem #3 - Hotend Pressure</h2>

<p>The last issue that we will address is a resulting property of fixing the previous two issues. If we have now have constrained filament and reduced the friction, we can now theoretically feed filament into the hot end at a much faster feed-rate. However if the nozzle hole size is small then the pressure in the hot end increases and we may not be able to achieve optimum speeds. </p>

<h2 id="solution-3">Solution #3</h2>

<p>I have tried nozzles 0.2mm, 0.3mm, 0.4mm and 1mm and the 1mm nozzle certainly throws out the filament as you would expect, and you can ramp the speed up. A 1mm nozzle can actually still print pretty good quality prints, because the Z layer height can still be set low, say 0.3mm. The extrudate will be squashed flatter and you will loose detail on some complicated perimeters, but the Z resolution will still be good. A 0.4mm nozzle is a good compromise for XY quality and speed, but you may want to experiment. Richrap’s <a href="http://www.thingiverse.com/thing:19590">Quick-Fit Extruder</a> carriage is excellent for quickly swapping out extruders for experimentation on Reprap style printers. I have also produced some <a href="https://www.thingiverse.com/thing:307021">Quick-Fit compatible single and dual extruders in my range</a>.</p>

<h2 id="final-word">Final Word</h2>

<h3 id="slicing">Slicing</h3>
<p>For me, my slicer of choice is <a href="http://www.craftunique.com/craftware">Craftware by Craftunique</a>. It seems to print flexible filament with the default settings, I just had to set the nozzle size (strangely called extrusion width) to my default 0.4 and reduce the speed accordingly, I also set the retract length to 4mm. It also has a great customisable support facility, which consists of pillars which can be added/removed/resized/auto generated before slicing, even placed on angles branching out like a tree. The support is easily removable, even with flexible filaments such as this Filaflex thumb below. It has super fast slicing, great graphics and is free, check it out :</p>

<p><a href="http://swindon.hackspace.org.uk/blog/how-to-3D-print-with-flexible-filaments/39.png"><img src="http://swindon.hackspace.org.uk/blog/how-to-3D-print-with-flexible-filaments/39.png" alt="Craftware by CraftUnique" /></a></p>

<p>However, here are some good starting profiles using Filaflex for <a href="http://recreus.com/en/index.php?controller=attachment&amp;id_attachment=1">Cura</a> or <a href="http://recreus.com/en/index.php?controller=attachment&amp;id_attachment=2">Slic3r</a>.</p>

<p>If you are building your own printer or manufacturing printers, then consider the Recreus Extruder and Hotend combo which is due out at beginning of November 2014, It’s a plug and play approach with many mounting holes on all sides so it is very adaptable. You will then be able to print with PLA, Filaflex and ABS at high speeds.</p>

<p>I would like to take this opportunity to thank <a href="http://recreus.com/en">Recreus</a> for the use of some images to help me explain the problems and solutions.</p>

<p>There are also many solutions on Thingiverse for you to print off your own  upgrade. Maybe it’s just a case of tweaking your hot end or slicer settings.</p>

<hr />

<p>I will leave you with a gallery of my prints which are either printed fully in Filaflex or incorporate Filaflex within their design.</p>

<p>If you would like to stay up to date with my designs then please follow me on <a href="http://www.thingiverse.com/Gyrobot/designs">Thingiverse</a>, <a href="https://twitter.com/gyrobotuk">Twitter</a>, <a href="https://www.facebook.com/GyrobotUK">Facebook</a> or <a href="http://instagram.com/gyrobotuk">Instagram</a>.</p>

<div class="galleria"></div>
<script>var data = [
{
  title: 'Hell-oween Flexy-Hand',
  image: '25.jpg',
  link:  'http://www.myminifactory.com/object/hell-oween-flexy-hand-2822',
},
{
  title: 'Hell-oween Flexy-Hand',
  image: '26.jpg',
  link:  'http://www.myminifactory.com/object/hell-oween-flexy-hand-2822',
},
{
  title: 'Flexy Flip Flop',
  image: '24.jpg',
  link:  'https://www.thingiverse.com/thing:380698',
},
{
  title: 'Frog Dissection Kit',
  image: '8.jpg',
  link:  'https://www.thingiverse.com/make:68731',
},
{
  title: 'Frog Dissection Kit',
  image: '9.jpg',
  link:  'https://www.thingiverse.com/make:68731',
},
{
  title: 'Flexy-Hand',
  image: '11.jpg',
  link:  'https://www.thingiverse.com/make:69561',
},
{
  title: 'Recreus Sneaker II - Gyrobot Remix',
  image: '12.jpg',
  link:  'https://www.thingiverse.com/thing:289292',
},
{
  title: 'Recreus Sneaker II - Gyrobot Remix',
  image: '14.jpg',
  link:  'https://www.thingiverse.com/thing:289292',
},
{
  title: 'Flexy Flip Flop',
  image: '16.jpg',
  link:  'https://www.thingiverse.com/thing:380698',
},
{
  title: 'Custom Prosthetic Liners',
  image: '19.jpg',
  image: '19.jpg',
},
{
  title: 'Flexy-Hand 2',
  image: '20.jpg',
  link:  'https://www.thingiverse.com/thing:380665',
},
{
  title: 'Filaflexy-Hand',
  image: '21.jpg',
  link:  'https://www.thingiverse.com/thing:439484',
},
{
  title: 'Flexy-Hand',
  image: '23.jpg',
  link:  'https://www.thingiverse.com/make:94594',
},
{
  title: 'Gear Bearing by Emmett',
  image: '1.JPG',
  link:  'https://www.thingiverse.com/make:60385',
},
{
  title: 'GoPro Hero 3 Mount',
  image: '2.jpg',
  link:  'https://www.thingiverse.com/thing:163107',
},
{
  title: 'Flexy-Hand',
  image: '5.jpg',
  link:  'https://www.thingiverse.com/thing:242639',
},
{
  title: 'Swindon Hackspace Logo',
  image: '3.jpg',
  link:  'https://www.thingiverse.com/make:63015',
},
{
  title: 'Tie-Fighter (Flexy-Frame)',
  image: '7.jpg',
  link:  'https://www.thingiverse.com/thing:262735',
},
{
  title: 'Die',
  image: '40.jpg',
  link:  'https://www.thingiverse.com/make:97857',
},
];Galleria.configure({    imageCrop: false,    transition: 'none',    showInfo: true,    autoplay: 3000,});Galleria.run('.galleria', {    dataSource: data,});</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Liquid Tape vs a Pi Camera Lead]]></title>
    <link href="http://swindon.hackspace.org.uk/blog/liquid-tape-vs-a-round-raspberry-pi-camera-lead/"/>
    <updated>2014-11-11T17:08:00+00:00</updated>
    <id>http://swindon.hackspace.org.uk/blog/liquid-tape-vs-a-round-raspberry-pi-camera-lead</id>
    
    <author>
      <name><![CDATA[Robert Longbottom]]></name>
    </author>
    
    <content type="html"><![CDATA[
<p>A while back I was watching either a YouTube video or reading a
blog post about soldering wires onto PCBs, possibly a quadcopter power
distribution board.  After soldering, the guy got out something called
liquid electrical tape and gobbed some over the solder joints to
reinforce them.  Brilliant I thought!  Why have I never head of this
stuff before?  I usually use the hot glue gun for things like that,
but somehow this looked better and neater.</p>

<!-- more -->

<p>So I promptly got on Google and looked into this stuff. There
were a few different manufacturers and it wasn’t that
cheap, so I nearly didn’t buy any because I didn’t have a specific use
for it at the time.  But in the end I thought what the heck and
ordered some from <a href="http://www.amazon.co.uk/gp/product/B000LNKIFS">Amazon</a>.</p>

<p><img src="http://swindon.hackspace.org.uk/blog/liquid-tape-vs-a-round-raspberry-pi-camera-lead/liquidTapeBottle.jpg" alt="Liquid Electrical Tape" /></p>

<p>It arrived, I opened it, looked at the bottle of black gooey tar-like
liquid, went “mmm, nice”, didn’t really have a use for it and so it
sat on my desk unused.  </p>

<p>Until now! </p>

<h2 id="enter-the-round-raspberry-pi-camera-extension-cable">Enter the Round Raspberry Pi Camera Extension Cable.</h2>

<p>I’ve been meaning to fit a camera to my 3D printer’s Raspberry Pi and
<a href="http://swindon.hackspace.org.uk/blog/octoprint-and-the-raspberry-pi-camera/">hook it into OctoPrint</a>
since I got the printer, and I finally got round to getting a camera.  The 
cable  that comes with it however, is flat and woefully short.  Not great 
for routing around to get the camera into the ideal location.  I’d looked 
for round cables in the past with no joy, but was pleased to find that 
someone was now selling them on <a href="http://stores.ebay.co.uk/picables">eBay</a>.</p>

<p>As it arrives it’s a bit “diy” to say the least, but that’s okay. What
you get is a cable with a plug on each end and a socket that looks
like it should be mounted onto a PCB.
Plugging the plug part into the back of the PCB socket and connecting
up the camera proved that it worked fine, however the connection
wasn’t at all secure and any movement of the camera or cable caused it
to stop working, requiring a reboot of the Pi to get it going again.</p>

<p>That wasn’t going to be very good, since I was planning on mounting the
camera on my printbed which moves back and forth.  I thought about heat 
shrinking the connection to reinforce it, but
realised it was a perfect opportunity to try out the liquid 
tape that had been sitting on my desk for quite a few weeks now.</p>

<p><img src="http://swindon.hackspace.org.uk/blog/liquid-tape-vs-a-round-raspberry-pi-camera-lead/brushingOn.jpg" alt="Brushing On" /></p>

<p>Knowing that the cable was working, I supported it on my desk with
some helping hands and a random heat sink that was lying around, then
started to apply the black goo from the bottle using the brush
attached to the inside of the lid.</p>

<p><img src="http://swindon.hackspace.org.uk/blog/liquid-tape-vs-a-round-raspberry-pi-camera-lead/halfDone.jpg" alt="Half Done" /></p>

<p>I applied plenty so as to cover the whole of the PCB socket; all the
time hoping this worked, because it wasn’t going to come apart again
without making some serious mess and probably ruining the cable.</p>

<p><img src="http://swindon.hackspace.org.uk/blog/liquid-tape-vs-a-round-raspberry-pi-camera-lead/oneCoatVsTwo.jpg" alt="One Coat vs Two" /></p>

<p>It took a couple of coats to get a good covering (that’s what it 
recommends on the bottle).  The goo seemed to shrink slightly as it 
dried and formed a nice tight rubbery seal around the connection.</p>

<p><img src="http://swindon.hackspace.org.uk/blog/liquid-tape-vs-a-round-raspberry-pi-camera-lead/completedProduct.jpg" alt="Finished Cable" /></p>

<p>The finished seal looks pretty tidy, probably more tidy than if I’d
used heat shrink. The cable still works and the camera can be moved
around without loosing its connection to the Raspberry Pi. Success!</p>

<p>So, if you enjoy messing around with black goo, enjoy the smell of strong 
solvent and have some electrical connections that need sealing or 
reinforcing, I can highly recommend using some liquid electrical tape.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PiFace Shutdown Message]]></title>
    <link href="http://swindon.hackspace.org.uk/blog/piface-shutdown-message/"/>
    <updated>2014-06-03T17:13:00+01:00</updated>
    <id>http://swindon.hackspace.org.uk/blog/piface-shutdown-message</id>
    
    <author>
      <name><![CDATA[Robert Longbottom]]></name>
    </author>
    
    <content type="html"><![CDATA[<p>If you’re running your Raspberry Pi in a headless mode, sometimes it’s hard to know 
when shutdown is complete and it’s safe to turn off the power. If you have a 
<a href="http://uk.farnell.com/piface/piface-control-display/i-o-board-with-lcd-display-for/dp/2344458">PiFace</a>
you could use that to display a message when shutdown is complete.  In this article 
we’ll see how to do just that.</p>

<!-- more -->

<h3 id="the-message">The Message</h3>

<p>First of all, let’s create a python script to display a message on the PiFace. 
Check out my previous post on <a href="http://swindon.hackspace.org.uk/blog/piface-control-and-display-board/">getting started with the PiFace</a>
for more details on exactly how to do this.</p>

<p>This is the script I’ll be using, it displays the Swindon Hackspace logo and
a simple message.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><pre><code class="py"><span class="line"><span class="kn">import</span> <span class="nn">pifacecad</span> <span class="kn">as</span> <span class="nn">p</span>
</span><span class="line">
</span><span class="line"><span class="n">cad</span> <span class="o">=</span> <span class="n">p</span><span class="o">.</span><span class="n">PiFaceCAD</span><span class="p">()</span>
</span><span class="line"><span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">backlight_on</span><span class="p">()</span>
</span><span class="line"><span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">cursor_off</span><span class="p">()</span>
</span><span class="line"><span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">blink_off</span><span class="p">()</span>
</span><span class="line">
</span><span class="line"><span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">set_cursor</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span>
</span><span class="line"><span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&quot;Shutdown&quot;</span><span class="p">)</span>
</span><span class="line"><span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">set_cursor</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
</span><span class="line"><span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&quot;Complete&quot;</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="n">sh</span> <span class="o">=</span> <span class="n">p</span><span class="o">.</span><span class="n">LCDBitmap</span><span class="p">([</span><span class="mi">3</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">14</span><span class="p">,</span><span class="mi">12</span><span class="p">,</span><span class="mi">24</span><span class="p">,</span><span class="mi">24</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">31</span><span class="p">])</span>
</span><span class="line"><span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">store_custom_bitmap</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">sh</span><span class="p">)</span>
</span><span class="line"><span class="n">sh</span> <span class="o">=</span> <span class="n">p</span><span class="o">.</span><span class="n">LCDBitmap</span><span class="p">([</span><span class="mi">31</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">27</span><span class="p">,</span><span class="mi">27</span><span class="p">,</span><span class="mi">27</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">31</span><span class="p">])</span>
</span><span class="line"><span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">store_custom_bitmap</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">sh</span><span class="p">)</span>
</span><span class="line"><span class="n">sh</span> <span class="o">=</span> <span class="n">p</span><span class="o">.</span><span class="n">LCDBitmap</span><span class="p">([</span><span class="mi">24</span><span class="p">,</span><span class="mi">28</span><span class="p">,</span><span class="mi">14</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">])</span>
</span><span class="line"><span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">store_custom_bitmap</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="n">sh</span><span class="p">)</span>
</span><span class="line"><span class="n">sh</span> <span class="o">=</span> <span class="n">p</span><span class="o">.</span><span class="n">LCDBitmap</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">24</span><span class="p">,</span><span class="mi">28</span><span class="p">,</span><span class="mi">14</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">3</span><span class="p">])</span>
</span><span class="line"><span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">store_custom_bitmap</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="n">sh</span><span class="p">)</span>
</span><span class="line"><span class="n">sh</span> <span class="o">=</span> <span class="n">p</span><span class="o">.</span><span class="n">LCDBitmap</span><span class="p">([</span><span class="mi">31</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">27</span><span class="p">,</span><span class="mi">27</span><span class="p">,</span><span class="mi">27</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">31</span><span class="p">])</span>
</span><span class="line"><span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">store_custom_bitmap</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="n">sh</span><span class="p">)</span>
</span><span class="line"><span class="n">sh</span> <span class="o">=</span> <span class="n">p</span><span class="o">.</span><span class="n">LCDBitmap</span><span class="p">([</span><span class="mi">31</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">14</span><span class="p">,</span><span class="mi">28</span><span class="p">,</span><span class="mi">24</span><span class="p">])</span>
</span><span class="line"><span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">store_custom_bitmap</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="n">sh</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">set_cursor</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span>
</span><span class="line"><span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">write_custom_bitmap</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class="line"><span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">write_custom_bitmap</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class="line"><span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">write_custom_bitmap</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</span><span class="line"><span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">set_cursor</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
</span><span class="line"><span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">write_custom_bitmap</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span>
</span><span class="line"><span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">write_custom_bitmap</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>
</span><span class="line"><span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">write_custom_bitmap</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
</span></code></pre></div></figure></notextile></div>

<p>Test that your script works by running it now: <code>python3 ShutdownMessage.py</code></p>

<h3 id="getting-the-script-to-run-on-shutdown">Getting the Script to Run on Shutdown</h3>

<p>The Linux rc system controls what services and processes run at boot time and at 
shutdown. It’s fairly easy to insert a small script into the startup sequence 
because you can simply add it to <code>rc.local</code>, however there is no equivalent for 
shutdown.</p>

<p>We will need to create ourselves a fully fledged init script.  This will live 
in <code>/etc/init.d/</code>.  If you have installed the PiFace package on your Raspberry Pi 
you should already have one in there called <code>pifacecadsysinfo</code> which you can configure 
to run at startup to display system info (CPU temperatures, etc).  This will be a 
good starting point for our shutdown script.  Make a copy of it and call it <code>pifaceshutdown</code>.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><pre><code class="sh"><span class="line">sudo cp /etc/init.d/pifacecadsysinfo /etc/init.d/pifaceshutdown
</span></code></pre></div></figure></notextile></div>

<p>Open it up in your favourite editor, since it is in the <code>etc</code> folder you’ll need 
to be root to be allowed to save changes, so I use this:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><pre><code class="sh"><span class="line">sudoedit /etc/init.d/pifaceshutdown
</span></code></pre></div></figure></notextile></div>

<p>Looking at the structure of the script there are a few points of interest.  The header 
at the top defines some parameters used by the init system to determine script order, 
more on that later. </p>

<p>For now I’m interested in the start and stop functions.  The <code>stop()</code> function is where 
we need to call our script.  We can take the code currently in the <code>start()</code> function and 
use that as a basis of our <code>stop()</code> function.  We don’t need all that stuff about tracking 
the process identifier so just copy the call to python.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><pre><code class="sh"><span class="line">stop<span class="o">()</span> <span class="o">{</span>
</span><span class="line">        <span class="nb">echo</span> -n <span class="s2">&quot;Displaying PiFace CAD shutdown message: &quot;</span>
</span><span class="line">        /usr/bin/python3 <span class="nv">$SCRIPT_FILE</span>
</span><span class="line">        <span class="nb">echo</span> <span class="s2">&quot;[Complete]&quot;</span>
</span><span class="line"><span class="o">}</span>
</span></code></pre></div></figure></notextile></div>

<p>Make sure to change the value of the <code>SCRIPT_FILE</code> variable towards the start of the 
script to point to wherever you saved your python script.  I saved mine in the home 
directory under a <code>piface</code> folder.  You’ll need to specify the full path here.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><pre><code class="sh"><span class="line"><span class="nv">SCRIPT_FILE</span><span class="o">=</span><span class="s2">&quot;/home/pi/piface/ShutdownMessage.py&quot;</span>
</span></code></pre></div></figure></notextile></div>

<p>We don’t want to do anything on start in this script (we could display a startup message of 
course), so clear out that method and just replace it with a friendly message that will be 
printed out to the console.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><pre><code class="sh"><span class="line">start<span class="o">()</span> <span class="o">{</span>
</span><span class="line">        <span class="nb">echo</span> <span class="s2">&quot;PiFace CAD shutdown message no action on start&quot;</span>
</span><span class="line"><span class="o">}</span>
</span></code></pre></div></figure></notextile></div>

<h3 id="the-tricky-bit">The Tricky Bit</h3>

<p>The whole idea of this is to try and give us an indication that it’s safe to disconnect 
the power, so we want our script to run as late as possible in the shutdown sequence.</p>

<p>Linux startup and shutdown is controlled by scripts which are run as part of
run-levels.  There is more info <a href="http://www.debian.org/doc/debian-policy/ch-opersys.html#s-sysvinit">here</a>
but for now all we need to know is that runlevel zero specifies 
scripts to run at shutdown. The scripts live in <code>/etc/init.d</code> and from there they
are linked to directories <code>/etc/rc0.d</code>, <code>/etc/rc1.d</code>, etc, one for each run-level.</p>

<p>We can see which scripts are currently configured to run at shutdown by looking in 
<code>/etc/rc0.d</code>.  These scripts will be run in order when the system shuts down. ‘K’ means
kill and the two digit number is used to provide the order.  For scripts with the same
number it isn’t really defined what the exact order is, the implication being that it
isn’t really important.  Some Linux init systems will try to run scripts in parallel in
order to speed up the process.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><pre><code class="sh"><span class="line">pi@raspberrypi ~ <span class="nv">$ </span>ls -l /etc/rc0.d/
</span><span class="line">total 4
</span><span class="line">lrwxrwxrwx 1 root root  22 Feb  9  2013 K01fake-hwclock -&gt; ../init.d/fake-hwclock
</span><span class="line">lrwxrwxrwx 1 root root  17 Feb  9  2013 K01ifplugd -&gt; ../init.d/ifplugd
</span><span class="line">lrwxrwxrwx 1 root root  17 Feb  9  2013 K01lightdm -&gt; ../init.d/lightdm
</span><span class="line">lrwxrwxrwx 1 root root  14 May  3 19:48 K01lirc -&gt; ../init.d/lirc
</span><span class="line">lrwxrwxrwx 1 root root  18 Feb  9  2013 K01plymouth -&gt; ../init.d/plymouth
</span><span class="line">lrwxrwxrwx 1 root root  24 Apr 21  2013 K01tightvncserver -&gt; ../init.d/tightvncserver
</span><span class="line">lrwxrwxrwx 1 root root  22 Feb  9  2013 K01triggerhappy -&gt; ../init.d/triggerhappy
</span><span class="line">lrwxrwxrwx 1 root root  17 Feb  9  2013 K01urandom -&gt; ../init.d/urandom
</span><span class="line">lrwxrwxrwx 1 root root  20 Apr 21  2013 K02alsa-utils -&gt; ../init.d/alsa-utils
</span><span class="line">lrwxrwxrwx 1 root root  18 Apr 21  2013 K03sendsigs -&gt; ../init.d/sendsigs
</span><span class="line">lrwxrwxrwx 1 root root  17 Apr 21  2013 K04rsyslog -&gt; ../init.d/rsyslog
</span><span class="line">lrwxrwxrwx 1 root root  22 Apr 21  2013 K05umountnfs.sh -&gt; ../init.d/umountnfs.sh
</span><span class="line">lrwxrwxrwx 1 root root  20 Apr 21  2013 K06nfs-common -&gt; ../init.d/nfs-common
</span><span class="line">lrwxrwxrwx 1 root root  17 Apr 21  2013 K06rpcbind -&gt; ../init.d/rpcbind
</span><span class="line">lrwxrwxrwx 1 root root  20 Apr 21  2013 K07hwclock.sh -&gt; ../init.d/hwclock.sh
</span><span class="line">lrwxrwxrwx 1 root root  20 Apr 21  2013 K07networking -&gt; ../init.d/networking
</span><span class="line">lrwxrwxrwx 1 root root  18 Apr 21  2013 K08umountfs -&gt; ../init.d/umountfs
</span><span class="line">lrwxrwxrwx 1 root root  20 Apr 21  2013 K09umountroot -&gt; ../init.d/umountroot
</span><span class="line">lrwxrwxrwx 1 root root  14 Apr 21  2013 K10halt -&gt; ../init.d/halt
</span></code></pre></div></figure></notextile></div>

<p>It looks pretty easy to add our script using the <code>update-rc.d</code> command:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><pre><code class="sh"><span class="line">usage: update-rc.d <span class="o">[</span>-n<span class="o">]</span> <span class="o">[</span>-f<span class="o">]</span> &lt;basename&gt; remove
</span><span class="line">       update-rc.d <span class="o">[</span>-n<span class="o">]</span> &lt;basename&gt; defaults <span class="o">[</span>NN | SS KK<span class="o">]</span>
</span><span class="line">       update-rc.d <span class="o">[</span>-n<span class="o">]</span> &lt;basename&gt; start|stop NN runlvl <span class="o">[</span>runlvl<span class="o">]</span> <span class="o">[</span>...<span class="o">]</span> .
</span><span class="line">       update-rc.d <span class="o">[</span>-n<span class="o">]</span> &lt;basename&gt; disable|enable <span class="o">[</span>S|2|3|4|5<span class="o">]</span>
</span><span class="line">                -n: not really
</span><span class="line">                -f: force
</span></code></pre></div></figure></notextile></div>

<p>We need to give it the name of our script <code>&lt;basename&gt;</code>, what we want to do (start or stop), 
the number to run as (NN) and the run-level to add it to.  This should work then,
we’ll choose <code>NN = 99</code> to make sure it runs last.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><pre><code class="sh"><span class="line">pi@raspberrypi ~ <span class="nv">$ </span>sudo update-rc.d pifaceshutdown stop 99 0 .
</span><span class="line">update-rc.d: using dependency based boot sequencing
</span></code></pre></div></figure></notextile></div>

<p>Unfortunately it seems to have ignored the <code>NN</code> parameter and puts our script
fairly early on in the sequence:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><pre><code class="sh"><span class="line">pi@raspberrypi ~ <span class="nv">$ </span>ls /etc/rc0.d/*pifaceshutdown
</span><span class="line">/etc/rc0.d/K01pifaceshutdown
</span></code></pre></div></figure></notextile></div>

<p>This probably wouldn’t matter for many scripts, but we want this to run as
near to last as possible so that once the message is displayed we know it’s
okay to disconnect the power.  So we’ll have to do something else.</p>

<p>Notice the output we got from <code>update-rc.d</code>, it said “using dependency based 
boot sequencing”.  That header in the init script we saw earlier is important.
It looks a bit like a big comment (‘#’ is used to indicate a line is a comment
in many linux scripts and some programming languages).</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><pre><code class="sh"><span class="line"><span class="c">### BEGIN INIT INFO</span>
</span><span class="line"><span class="c"># Provides: pifacecadsysinfo</span>
</span><span class="line"><span class="c"># Required-Start:    $remote_fs $syslog</span>
</span><span class="line"><span class="c"># Required-Stop:     $remote_fs $syslog</span>
</span><span class="line"><span class="c"># Default-Start:     2 3 4 5</span>
</span><span class="line"><span class="c"># Default-Stop:      0 1 6</span>
</span><span class="line"><span class="c"># Short-Description: Start pifacecad status daemon at boot time.</span>
</span><span class="line"><span class="c"># Description:       Start pifacecad status daemon at boot time.</span>
</span><span class="line"><span class="c">### END INIT INFO</span>
</span></code></pre></div></figure></notextile></div>

<p>Looks like we’d better update this.  First off, it would be polite to update the 
descriptions, so do that.</p>

<p><code>Default-Start</code> and <code>Default-Stop</code> look like they give a hint to which run-levels 
our script should be in by default, so let’s clear out <code>Default-Start</code> and set 
<code>Default-Stop</code> to just include run level zero (shutdown).  Note that run-level 
one is single-user mode,  generally only used by sysadmins for doing system 
maintenance or when you have a serious problem, and run-level six is used for reboot.</p>

<p>The remaining three parameters look like they have something to do with the order
in which the scripts are run.  <code>Required-Start</code> and <code>Required-Stop</code> look like 
they control the order of starting and stopping services.  We aren’t fussed about 
start-up so clear this out.  </p>

<p>At this point I’m going to skip a bit of trial and error I did while I played around 
with various values in <code>Required-Stop</code> option, but let’s just say that nothing I tried 
made much difference.  The values you can use in this option are the name of another 
init script, or a few special values (such as <code>$syslog</code>) which are defined in the 
<a href="https://wiki.debian.org/LSBInitScripts">documentation</a>.</p>

<p>Eventually I abandoned trying to make <code>Required-Stop</code> work and noticed an option that
wasn’t in the original script we copied called <code>X-Stop-After</code>.  This makes much more 
sense and does what it says on the tin - stop this script after some other.</p>

<p>Looking at the scripts that run in our current shutdown sequence (above) the last
few are <code>K08umountfs</code>, <code>K09umountroot</code> and <code>K10halt</code>.  We can’t stop after <code>halt</code>
because the system will be halted at that time.  I tried stopping after <code>unmountroot</code>
which nearly worked, but it didn’t quite have time to complete drawing the entire display
before the system halted so I ended up with only half a message. </p>

<p>Finally I decided on <code>X-Stop-After: umountfs</code>, which seemed to work nicely.  You may
need to experiment a little.  My header ended up looking like this:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><pre><code class="sh"><span class="line"><span class="c">### BEGIN INIT INFO</span>
</span><span class="line"><span class="c"># Provides: pifaceshutdown</span>
</span><span class="line"><span class="c"># Required-Start:</span>
</span><span class="line"><span class="c"># Required-Stop:</span>
</span><span class="line"><span class="c"># X-Stop-After:      umountfs</span>
</span><span class="line"><span class="c"># Default-Start:</span>
</span><span class="line"><span class="c"># Default-Stop:      0</span>
</span><span class="line"><span class="c"># Short-Description: Displays a shutdown message on the PiFace.</span>
</span><span class="line"><span class="c"># Description:       Displays a shutdown message on the PiFace.</span>
</span><span class="line"><span class="c">### END INIT INFO</span>
</span></code></pre></div></figure></notextile></div>

<p>Finally, re-add the script to run-level zero and check it worked.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><pre><code class="sh"><span class="line">pi@raspberrypi ~ <span class="nv">$ </span>sudo update-rc.d pifaceshutdown stop 99 0 .
</span><span class="line">update-rc.d: using dependency based boot sequencing
</span><span class="line">
</span><span class="line">pi@raspberrypi ~ <span class="nv">$ </span>ls /etc/rc0.d/*pifaceshutdown
</span><span class="line">/etc/rc0.d/K09pifaceshutdown
</span></code></pre></div></figure></notextile></div>

<p>Much better!  Make sure to clear the PiFace if it’s still showing the 
shutdown message from our earlier test (or you won’t know if it’s worked
or not), then shutdown your Raspberry Pi.  It doesn’t matter how you shutdown,
I usually use the command line <code>sudo shutdown now -h</code>.</p>

<p><img src="http://swindon.hackspace.org.uk/blog/piface-shutdown-message/piface-shutdown.jpg" alt="PiFace Shutdown" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octoprint and the Raspberry Pi Camera Module]]></title>
    <link href="http://swindon.hackspace.org.uk/blog/octoprint-and-the-raspberry-pi-camera/"/>
    <updated>2014-05-19T14:20:00+01:00</updated>
    <id>http://swindon.hackspace.org.uk/blog/octoprint-and-the-raspberry-pi-camera</id>
    
    <author>
      <name><![CDATA[Steve Wood, AKA Gyrobot]]></name>
    </author>
    
    <content type="html"><![CDATA[<p>The Hackspace recently took delivery of a Raspberry Pi NoIR Camera Module from 
<a href="http://uk.farnell.com/">Farnell</a> - full details are on <a href="http://uk.farnell.com/raspberry-pi/rpi-noir-camera-board/raspberry-pi-noir-camera-board/dp/2357308">their website</a>.
It is an add-on camera module for the Raspberry Pi which has no infrared filter, making it perfect for taking infrared photographs or photographing objects in low light (twilight) conditions. The camera plugs directly into the Pi by way of a 15 pin Ribbon Cable, to the dedicated 15 pin MIPI Camera Serial Interface (CSI). The standard ribbon cable supplied is going to be too short for our 3D printer needs, but longer ribbon cables can be purchased. The cable can easily be replaced by uncoupling at the camera end.</p>

<p><a href="http://swindon.hackspace.org.uk/blog/octoprint-and-the-raspberry-pi-camera/12.jpg"><img src="http://swindon.hackspace.org.uk/blog/octoprint-and-the-raspberry-pi-camera/12-sml.jpg" alt="The Pi NoIR Camera Board Box" /></a></p>

<!-- more -->

<ul>
  <li>General Specification</li>
  <li>Omnivision 5647 sensor in a fixed-focus module without IR filter</li>
  <li>5 megapixel</li>
  <li>2592×1944 stills</li>
  <li>1080p at 30 frames per second</li>
  <li>720p at 60 frames per second</li>
  <li>640x480p at 60/90 frames per second</li>
  <li>CSi interface with 150mm ribbon cable</li>
  <li>Weighs 2.4g (3.4g with ribbon cable)</li>
</ul>

<p>In this post I’ll cover what we did to get the camera module working and ready for use. There will be a follow up post which will show how we are actually using it and how the camera and Pi is fitted to the printer.</p>

<h2 id="a-bit-of-background">A Bit of Background</h2>

<p>The Hackspace already has a Raspberry Pi running as a 3D print server allowing the controlling of our Prusa Mendel through the two options of either <a href="http://octoprint.org/">Octoprint</a> or <a href="http://www.repetier.com/repetier-server-download/">Repetier Server</a>. The Pi distribution was provided by myself and is <a href="http://www.raspbian.org/">Raspbian</a> with Octoprint and Repetier Server loaded afterwards. What we need to do is add support for the RaspiCam and web video streaming. Initially to take time-lapse videos of 3D printing then moving onto other projects afterwards.</p>

<h2 id="repetier-server-or-octoprint">Repetier Server or Octoprint?</h2>

<p>The short answer for the Hackspace is both, and we use whatever our own personal preference is. Repetier Server is not to be confused with <a href="http://www.repetier.com/documentation/repetier-host/">Repetier Host</a>, which is by the same developer. Repetier Host is a full work flow solution for 3D printing to create, visualise and edit printer paths, as well as full printer control. All of this software is completely free.</p>

<p>Octoprint has built in camera support for time-lapse video or stills while printing, or even live streaming via it’s web interface. It also allows graphical visualisation of the printer extrusion paths live as they are being printed. Repetier Server does not have support for either of these although live streaming can still be accessed on port 8080 via the <a href="http://sourceforge.net/apps/mediawiki/mjpg-streamer/nfs/project/m/mj/mjpg-streamer/7/7f/Screenshot_static_example.png">mjpg-streamer web interface</a>, which gets installed as part of the set-up for the video side of things (more on that later). Repetier server has an annoying bug where after you have ran a print job, the manual extrude feature either does not work, or wants to extrude forever, resulting in a switch off and switch on solution. However, Repetier server does seem faster when uploading gcode, or when choosing to print a previously uploaded file.</p>

<p>For the purposes of this article we will be focusing on using OctoPrint, because as mentioned earlier, it has built in camera support.</p>

<h2 id="the-beginning">The Beginning</h2>

<p>To create a 3D print server on a Pi from scratch, the easiest route to follow is to download the <a href="https://github.com/guysoft/OctoPi">OctoPi</a> distribution and follow their instructions, which have everything included to get the Pi working with OctoPrint and the RaspiCam. You can then add on Repetier Server to this afterwards should you wish. Installing OctoPi would make this article end now and everything would be so straight forward.</p>

<h2 id="updating-the-raspberry-pi">Updating the Raspberry Pi</h2>

<p>It’s been some time since the Pi was updated so we thought it was best to go through this first.</p>

<p>We updated the Raspbian install on our Raspberry Pi by running :</p>

<pre><code>apt-get update &amp;&amp; apt-get upgrade
</code></pre>

<p>You may need to be root, in which case :</p>

<pre><code>sudo apt-get update &amp;&amp; sudo apt-get upgrade
</code></pre>

<p>This took some hours.</p>

<h2 id="enabling-the-camera">Enabling the camera</h2>

<p>Open the <code>raspi-config</code> tool from the Terminal:</p>

<pre><code>sudo raspi-config
</code></pre>

<p>Select <code>camera</code>, then select <code>Enable</code>, and when prompted to reboot select <code>Yes</code>.</p>

<p><a href="http://swindon.hackspace.org.uk/blog/octoprint-and-the-raspberry-pi-camera/16.png"><img src="http://swindon.hackspace.org.uk/blog/octoprint-and-the-raspberry-pi-camera/16.png" alt="raspi-config" /></a></p>

<p>Enabling the camera using <code>raspi-config</code> did two things. It told your Pi that there is a camera attached and it added three command line utilities.</p>

<pre><code>raspistill
raspivid
raspiyuv
</code></pre>

<p>With the camera module connected and enabled, enter the following command in the Terminal to take a picture:</p>

<pre><code>raspistill -o cam.jpg
</code></pre>

<p>For more on command line usage, see : <a href="http://www.raspberrypi.org/documentation/usage/camera/raspicam/README.md">http://www.raspberrypi.org/documentation/usage/camera/raspicam/README.md</a></p>

<h2 id="installing-octoprint">Installing Octoprint</h2>

<p>If you do not have Octoprint installed and don’t fancy installing the <a href="https://github.com/guysoft/OctoPi">OctoPi</a> distribution, then maybe you would prefer to add Octoprint onto your existing Pi OS? For this I would only be repeating (and not very well) what has already been written over on the <a href="https://github.com/foosel/OctoPrint/wiki/Setup-on-a-Raspberry-Pi-running-Raspbian">OctoPrint Github Repository</a>, so check it out.</p>

<h2 id="adding-rasppicam-support-to-octoprint">Adding RaspPiCam Support to Octoprint</h2>

<p>The repository we need to download, unpack and compile is <a href="https://github.com/jacksonliam/mjpg-streamer">mjpg-streamer-experimental</a> by Liam Jackson. This has the RaspiCam plugin</p>

<p>For the compile side, we need to ensure the command <code>cmake</code> and a dev version of <code>libjpeg</code> is pre-installed:</p>

<pre><code>sudo apt-get install libjpeg62-dev
sudo apt-get install cmake
</code></pre>

<p>When prompted select <code>Y</code> to install.</p>

<pre><code>cd ~
wget https://github.com/jacksonliam/mjpg-streamer/archive/master.zip
unzip master.zip
rm master.zip
cd mjpg-streamer-master/mjpg-streamer-experimental
make clean all
</code></pre>

<p>You can run directly from the mjpg-streamer-experimental folder with:</p>

<pre><code>export LD_LIBRARY_PATH=.
./mjpg_streamer -o "output_http.so -w ./www" -i "input_raspicam.so"
</code></pre>

<p>You can also specify options, like in <code>raspivid</code> above</p>

<pre><code>export LD_LIBRARY_PATH=.
./mjpg_streamer -o "output_http.so -w ./www" -i "input_raspicam.so -x 1280 -y 720 -fps 15 -ex night"
</code></pre>

<p>If you have followed the install guide for <a href="https://github.com/foosel/OctoPrint/wiki/Setup-on-a-Raspberry-Pi-running-Raspbian">OctoPrint</a> correctly, then you will need to make the following changes to your <a href="https://github.com/foosel/OctoPrint/wiki/Setup-on-a-Raspberry-Pi-running-Raspbian#automatic-start-up">startup script</a> to now look at this new mjpg-streamer-experimental folder:</p>

<p>Edit the <code>/home/pi/bin/octoprint</code> start up script with the following:</p>

<pre><code>#!/bin/sh
OCTOPRINT_HOME=/home/pi/OctoPrint
MJPEG_STREAMER_HOME=/home/pi/mjpg-streamer-master/mjpg-streamer-experimental
export LD_LIBRARY_PATH=$MJPEG_STREAMER_HOME

# start mjpeg streamer
$MJPEG_STREAMER_HOME/mjpg_streamer -i "$MJPEG_STREAMER_HOME/input_raspicam.so -x 1280 -y 720 -fps 15 -ex night" -o "$MJPEG_STREAMER_HOME/output_http.so -w $MJPEG_STREAMER_HOME/www" &amp;

# start the webui
$OCTOPRINT_HOME/run --daemon start
</code></pre>

<p>Hopefully that’s it, after a reboot, you should find that OctoPrint is running on the <code>http://&lt;your Raspi's IP&gt;:&lt;port number&gt;</code> you have assigned and the webcam feed from the RaspiCam is visible in the <code>Control</code> tab</p>

<p>You can see in the following photo that the infrared from a remote control can be picked up, due to this model of RaspiCam having no infrared filter.</p>

<p><a href="http://swindon.hackspace.org.uk/blog/octoprint-and-the-raspberry-pi-camera/14.jpg"><img src="http://swindon.hackspace.org.uk/blog/octoprint-and-the-raspberry-pi-camera/14-sml.jpg" alt="Infrared Remote" /></a></p>

<p>NOTE : You can still access the webcam stream without OctoPrint installed, in case you want to use Repetier Server instead. Just type <code>http://&lt;your Raspi's IP&gt;:8080</code> in your favourite browser.</p>

<p><a href="http://swindon.hackspace.org.uk/blog/octoprint-and-the-raspberry-pi-camera/17.png"><img src="http://swindon.hackspace.org.uk/blog/octoprint-and-the-raspberry-pi-camera/17.png" alt="Mjpg-Streamer" /></a></p>

<h2 id="next-steps">Next Steps</h2>

<p>We now need to design an enclosure for the Pi and PiFace, buy a longer camera ribbon connection, then find a suitable mounting position on the Prusa Mendel for it’s final resting place.</p>

<p><a href="http://swindon.hackspace.org.uk/blog/octoprint-and-the-raspberry-pi-camera/13.jpg"><img src="http://swindon.hackspace.org.uk/blog/octoprint-and-the-raspberry-pi-camera/13-sml.jpg" alt="3D Printer Setup" /></a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PiFace Control And Display Board]]></title>
    <link href="http://swindon.hackspace.org.uk/blog/piface-control-and-display-board/"/>
    <updated>2014-05-08T17:20:00+01:00</updated>
    <id>http://swindon.hackspace.org.uk/blog/piface-control-and-display-board</id>
    
    <author>
      <name><![CDATA[Robert Longbottom]]></name>
    </author>
    
    <content type="html"><![CDATA[<p>The Hackspace recently took delivery of a 
<a href="http://uk.farnell.com/piface/piface-control-display/i-o-board-with-lcd-display-for/dp/2344458">PiFace Control and Display board from Farnell</a>.
It is an add-on board for the Raspberry Pi that includes a 16 character by 2 line
display, five push buttons, a toggle button and an IR receiver.  The 
intention is to use this on the Hackspace 3D printer to display some information
about the printer (bed and extruder temperatures) and about the job (percent
complete).  It would also be nice to use the buttons to control some of the 
functions of the printer such as priming the extruder.</p>

<p>In this post I’ll cover what I did to get up and running with the PiFace.  This
was really just a learning exercise to understand how it works and what can be
done.  There will be another post about getting it working with the 3D printer
later on.</p>

<!-- more -->

<p><img src="http://swindon.hackspace.org.uk/blog/piface-control-and-display-board/Piface.jpg" alt="PiFace" /></p>

<h2 id="getting-the-raspberry-pi-ready">Getting The Raspberry Pi Ready</h2>

<p>There is a nice guide on getting everything setup on the <a href="http://www.piface.org.uk/guides/setting_up_pifacecad/">PiFace website</a>
so I won’t go into every detail again.  In short:</p>

<ul>
  <li>
    <p>Updated the Raspbian install on our Raspberry Pi by running 
<code>apt-get update &amp;&amp; apt-get upgrade</code>  This took some hours, must have 
been quite a while since we did it!</p>
  </li>
  <li>
    <p>Enabled SPI using <code>raspi-config</code>.  What this actually seems to do is make 
sure the spi kernel module is installed.</p>
  </li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><pre><code class="sh"><span class="line">pi@raspberrypi ~ <span class="nv">$ </span>lsmod |grep spi
</span><span class="line">regmap_spi              1897  1 snd_soc_core
</span><span class="line">spi_bcm2708             4728  0
</span></code></pre></div></figure></notextile></div>

<ul>
  <li>Installed the PiFace Python modules <code>apt-get install python3-pifacecad</code>.
It’s nice that it is included in the Raspbian repos and can be installed so easily.</li>
</ul>

<h2 id="first-test">First Test</h2>

<p>The best idea is always to test using some code written by someone else
so that you know you have everything setup correctly.  Fortunately there is
a nice sysinfo sample provided.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><pre><code class="sh"><span class="line">pi@raspberrypi ~ <span class="nv">$ </span>python3 /usr/share/doc/python3-pifacecad/examples/sysinfo.py
</span></code></pre></div></figure></notextile></div>

<p><img src="http://swindon.hackspace.org.uk/blog/piface-control-and-display-board/Sysinfo.jpg" alt="Sysinfo Demo" /></p>

<p>That works perfectly.  Time to dive into python and see what the api is like.</p>

<h2 id="hello-world-using-the-python-shell">Hello World Using The Python Shell</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><pre><code class="py"><span class="line"><span class="n">pi</span><span class="nd">@raspberrypi</span> <span class="o">~</span> <span class="err">$</span> <span class="n">python3</span>
</span><span class="line"><span class="n">Python</span> <span class="mf">3.2</span><span class="o">.</span><span class="mi">3</span> <span class="p">(</span><span class="n">default</span><span class="p">,</span> <span class="n">Mar</span>  <span class="mi">1</span> <span class="mi">2013</span><span class="p">,</span> <span class="mi">11</span><span class="p">:</span><span class="mi">53</span><span class="p">:</span><span class="mi">50</span><span class="p">)</span>
</span><span class="line"><span class="p">[</span><span class="n">GCC</span> <span class="mf">4.6</span><span class="o">.</span><span class="mi">3</span><span class="p">]</span> <span class="n">on</span> <span class="n">linux2</span>
</span><span class="line"><span class="n">Type</span> <span class="s">&quot;help&quot;</span><span class="p">,</span> <span class="s">&quot;copyright&quot;</span><span class="p">,</span> <span class="s">&quot;credits&quot;</span> <span class="ow">or</span> <span class="s">&quot;license&quot;</span> <span class="k">for</span> <span class="n">more</span> <span class="n">information</span><span class="o">.</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">pifacecad</span> <span class="kn">as</span> <span class="nn">p</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">cad</span> <span class="o">=</span> <span class="n">p</span><span class="o">.</span><span class="n">PiFaceCAD</span><span class="p">()</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">backlight_on</span><span class="p">()</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&quot;Hello World!&quot;</span><span class="p">)</span>
</span></code></pre></div></figure></notextile></div>

<p><img src="http://swindon.hackspace.org.uk/blog/piface-control-and-display-board/HelloWorld.jpg" alt="Hello World" /></p>

<p>Pretty simple!  It took me much longer than this to get one of these
displays working on Arduino the first time I tried it.  But a lot of 
that was sorting out the wiring!  Thats one good reason to get a 
PiFace instead of wiring up your own display.</p>

<h2 id="something-a-bit-fancier">Something A Bit Fancier</h2>

<p>Ok, let’s try something a bit more tricky.  There are api commands to
move the cursor around and to hide the cursor, so let’s have a go with those.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><pre><code class="py"><span class="line"><span class="n">pi</span><span class="nd">@raspberrypi</span> <span class="o">~</span> <span class="err">$</span> <span class="n">python3</span>
</span><span class="line"><span class="n">Python</span> <span class="mf">3.2</span><span class="o">.</span><span class="mi">3</span> <span class="p">(</span><span class="n">default</span><span class="p">,</span> <span class="n">Mar</span>  <span class="mi">1</span> <span class="mi">2013</span><span class="p">,</span> <span class="mi">11</span><span class="p">:</span><span class="mi">53</span><span class="p">:</span><span class="mi">50</span><span class="p">)</span>
</span><span class="line"><span class="p">[</span><span class="n">GCC</span> <span class="mf">4.6</span><span class="o">.</span><span class="mi">3</span><span class="p">]</span> <span class="n">on</span> <span class="n">linux2</span>
</span><span class="line"><span class="n">Type</span> <span class="s">&quot;help&quot;</span><span class="p">,</span> <span class="s">&quot;copyright&quot;</span><span class="p">,</span> <span class="s">&quot;credits&quot;</span> <span class="ow">or</span> <span class="s">&quot;license&quot;</span> <span class="k">for</span> <span class="n">more</span> <span class="n">information</span><span class="o">.</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">pifacecad</span> <span class="kn">as</span> <span class="nn">p</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">cad</span> <span class="o">=</span> <span class="n">p</span><span class="o">.</span><span class="n">PiFaceCAD</span><span class="p">()</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">backlight_on</span><span class="p">()</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">clear</span><span class="p">()</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">set_cursor</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&quot;Swindon&quot;</span><span class="p">)</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">set_cursor</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&quot;Hackspace&quot;</span><span class="p">)</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">cursor_off</span><span class="p">()</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">blink_off</span><span class="p">()</span>
</span></code></pre></div></figure></notextile></div>

<p>A few points to note here.  For the non-programmers out there, computers count 
from zero, so “5” is actually the 6th position along and “0” is the first row. 
Interesting that you have to call both <code>cursor_off()</code> and <code>blink_off()</code> to totally 
get rid of the cursor, but that could be useful in certain situations.</p>

<p><img src="http://swindon.hackspace.org.uk/blog/piface-control-and-display-board/Hackspace.jpg" alt="Swindon Hackspace" /></p>

<h2 id="custom-bitmaps">Custom Bitmaps</h2>

<p>It would be nice if I could get the Swindon Hackspace logo on there too 
using the custom bitmap support.  From the 
<a href="http://piface.github.io/pifacecad/creating_custom_bitmaps.html">documentation</a>
it doesn’t look too difficult,  there is a <a href="http://www.quinapalus.com/hd44780udg.html">page for generating the codes</a> 
to create characters that is linked to from the documentation.  If you’re familiar with
setting bits in bytes it’s fairly easy to see what is going on; if you want the
right most pixel to be on, add 1, the second from the right, add 2, third
from the right add 4, fourth from the right, add 8, fifth from the right
add 16.  Do this for each line and you have the 8 values you need to pass 
into the <code>LCDBitmap()</code> function.</p>

<p>However there isn’t really enough room to get the hackspace logo in a single 
character so let’s try using more than one.  No mention of how many custom 
characters you are allowed in the PiFace docs, but the designer page about 
the HD44780 says you can have up to eight.  If we had 3x2 that would give us 
(5+5+5) x (8+8) = 15x16 pixels to play with.  That’s a nice square-ish shape and 
uses 6 custom characters so could work.  </p>

<p>I created a new image in Gimp that is 15x16 pixels, zoom in to 1600% and 
started designing by filling in pixels.  I then “split” this into six by using
the select tool to draw round each group of 5x8 pixels and copied it into
the online designer to generate the codes.  Lazy I know, I could work out
those numbers myself!</p>

<p>My first attempt didn’t look so great because of where the physical gaps 
between the characters on the display fell, but a bit of tweaking and I ended 
up with something like this:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><pre><code class="py"><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">sh</span> <span class="o">=</span> <span class="n">p</span><span class="o">.</span><span class="n">LCDBitmap</span><span class="p">([</span><span class="mi">3</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">14</span><span class="p">,</span><span class="mi">12</span><span class="p">,</span><span class="mi">24</span><span class="p">,</span><span class="mi">24</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">31</span><span class="p">])</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">store_custom_bitmap</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">sh</span><span class="p">)</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">sh</span> <span class="o">=</span> <span class="n">p</span><span class="o">.</span><span class="n">LCDBitmap</span><span class="p">([</span><span class="mi">31</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">27</span><span class="p">,</span><span class="mi">27</span><span class="p">,</span><span class="mi">27</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">31</span><span class="p">])</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">store_custom_bitmap</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">sh</span><span class="p">)</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">sh</span> <span class="o">=</span> <span class="n">p</span><span class="o">.</span><span class="n">LCDBitmap</span><span class="p">([</span><span class="mi">24</span><span class="p">,</span><span class="mi">28</span><span class="p">,</span><span class="mi">14</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">])</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">store_custom_bitmap</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="n">sh</span><span class="p">)</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">sh</span> <span class="o">=</span> <span class="n">p</span><span class="o">.</span><span class="n">LCDBitmap</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">24</span><span class="p">,</span><span class="mi">28</span><span class="p">,</span><span class="mi">14</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">3</span><span class="p">])</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">store_custom_bitmap</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="n">sh</span><span class="p">)</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">sh</span> <span class="o">=</span> <span class="n">p</span><span class="o">.</span><span class="n">LCDBitmap</span><span class="p">([</span><span class="mi">31</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">27</span><span class="p">,</span><span class="mi">27</span><span class="p">,</span><span class="mi">27</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">31</span><span class="p">])</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">store_custom_bitmap</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="n">sh</span><span class="p">)</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">sh</span> <span class="o">=</span> <span class="n">p</span><span class="o">.</span><span class="n">LCDBitmap</span><span class="p">([</span><span class="mi">31</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">14</span><span class="p">,</span><span class="mi">28</span><span class="p">,</span><span class="mi">24</span><span class="p">])</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">store_custom_bitmap</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="n">sh</span><span class="p">)</span>
</span></code></pre></div></figure></notextile></div>

<p>That code loads six custom characters into memory locations zero to five.
Now all we need to do is write them out to the display.  It might be wise 
to turn the cursor back on at this point to see where we are writing to:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><pre><code class="py"><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">cursor_on</span><span class="p">()</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">blink_on</span><span class="p">()</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">set_cursor</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span>
</span></code></pre></div></figure></notextile></div>

<p>Note that the cursor doesn’t reappear until you move it somewhere. Time 
to write out the logo and finally hide the cursor again.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><pre><code class="py"><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">write_custom_bitmap</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">write_custom_bitmap</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">write_custom_bitmap</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">set_cursor</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">write_custom_bitmap</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">write_custom_bitmap</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">write_custom_bitmap</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">cursor_off</span><span class="p">()</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">blink_off</span><span class="p">()</span>
</span></code></pre></div></figure></notextile></div>

<p><img src="http://swindon.hackspace.org.uk/blog/piface-control-and-display-board/HackspaceLogo.jpg" alt="Custom Bitmaps" /></p>

<p>A pretty pleasing result for an hour of playing around in the Python
shell.</p>

<p>Interestingly, if you redefine one of the custom bitmaps by calling 
<code>store_custom_bitmap()</code> while it is on the display, it changes immediately 
without you having to rewrite it using <code>write_custom_bitmap()</code>.  This 
could be a neat way to have animated characters.  It does mean that 
you really are limited to the 8 it supports though, and you can’t 
“cheat” by defining one, writing it to the display and then re-defining it.</p>

<h2 id="errors">Errors</h2>

<p>If you do try to access or create more custom bitmaps than you should 
you get a nice friendly error message, which is good to know.  It’s always
reassuring that a library is decently written when it provides nice error
messages.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><pre><code class="py"><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">write_custom_bitmap</span><span class="p">(</span><span class="mi">8</span><span class="p">)</span>
</span><span class="line"><span class="n">Traceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">):</span>
</span><span class="line">  <span class="n">File</span> <span class="s">&quot;&lt;stdin&gt;&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1</span><span class="p">,</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">module</span><span class="o">&gt;</span>
</span><span class="line">  <span class="n">File</span> <span class="s">&quot;/usr/lib/python3/dist-packages/pifacecad/lcd.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">458</span><span class="p">,</span> <span class="ow">in</span> <span class="n">write_custom_bitmap</span>
</span><span class="line">	<span class="bp">self</span><span class="o">.</span><span class="n">char_bank_in_range_or_error</span><span class="p">(</span><span class="n">char_bank</span><span class="p">)</span>
</span><span class="line">  <span class="n">File</span> <span class="s">&quot;/usr/lib/python3/dist-packages/pifacecad/lcd.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">492</span><span class="p">,</span> <span class="ow">in</span> <span class="n">char_bank_in_range_or_error</span>
</span><span class="line">	<span class="n">cgramaddr</span><span class="o">=</span><span class="n">char_bank</span><span class="p">,</span>
</span><span class="line"><span class="ne">Exception</span><span class="p">:</span> <span class="n">There</span> <span class="n">are</span> <span class="n">only</span> <span class="mi">8</span> <span class="n">custom</span> <span class="n">characters</span> <span class="p">(</span><span class="n">You</span> <span class="n">tried</span> <span class="n">to</span> <span class="n">access</span> <span class="mi">8</span><span class="p">)</span><span class="o">.</span>
</span><span class="line">
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">cad</span><span class="o">.</span><span class="n">lcd</span><span class="o">.</span><span class="n">store_custom_bitmap</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span> <span class="n">sh</span><span class="p">)</span>
</span><span class="line"><span class="n">Traceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">):</span>
</span><span class="line">  <span class="n">File</span> <span class="s">&quot;&lt;stdin&gt;&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1</span><span class="p">,</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">module</span><span class="o">&gt;</span>
</span><span class="line">  <span class="n">File</span> <span class="s">&quot;/usr/lib/python3/dist-packages/pifacecad/lcd.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">474</span><span class="p">,</span> <span class="ow">in</span> <span class="n">store_custom_bitmap</span>
</span><span class="line">	<span class="bp">self</span><span class="o">.</span><span class="n">char_bank_in_range_or_error</span><span class="p">(</span><span class="n">char_bank</span><span class="p">)</span>
</span><span class="line">  <span class="n">File</span> <span class="s">&quot;/usr/lib/python3/dist-packages/pifacecad/lcd.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">492</span><span class="p">,</span> <span class="ow">in</span> <span class="n">char_bank_in_range_or_error</span>
</span><span class="line">	<span class="n">cgramaddr</span><span class="o">=</span><span class="n">char_bank</span><span class="p">,</span>
</span><span class="line"><span class="ne">Exception</span><span class="p">:</span> <span class="n">There</span> <span class="n">are</span> <span class="n">only</span> <span class="mi">8</span> <span class="n">custom</span> <span class="n">characters</span> <span class="p">(</span><span class="n">You</span> <span class="n">tried</span> <span class="n">to</span> <span class="n">access</span> <span class="mi">8</span><span class="p">)</span><span class="o">.</span>
</span></code></pre></div></figure></notextile></div>

<h2 id="and-finally">And Finally…</h2>

<p>Given I only know the basics in Python (though I do code in other languages)
it’s pretty easy to get started with the PiFace and make it do some cool stuff.
It seems like it should be fairly easy to get it doing something useful with
the 3D printer.  More on that later….</p>

<p>Thanks go to <a href="http://uk.farnell.com/">Farnell / Element14</a> for supplying the PiFace
Control and Display board.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Diy Radiator Booster]]></title>
    <link href="http://swindon.hackspace.org.uk/blog/diy-radiator-booster/"/>
    <updated>2013-10-25T18:05:00+01:00</updated>
    <id>http://swindon.hackspace.org.uk/blog/diy-radiator-booster</id>
    
    <author>
      <name><![CDATA[Robert Longbottom]]></name>
    </author>
    
    <content type="html"><![CDATA[<p>Central heating is a great invention and radiators generally do a 
good job of pumping out heat into a room.  Sometimes however due
to the layout of the room or positioning of the radiator it
doesn’t quite work as well as it could.  I have a room like this
and decided to go for a bit of a DIY solution.</p>

<!-- more -->

<p><img src="http://swindon.hackspace.org.uk/blog/diy-radiator-booster/2.jpg" alt="Booster in place" /></p>

<p>My kitchen and dining room are one and also open to the stairs 
and landing.  With only one big raditor in the whole space most 
of the heat tends to rise and go up the stairs rather than circulating
in the rooms, meaning it always feels chilly.  There are various
<a href="http://www.nigelsecostore.com/acatalog/Radiator_Booster.html">commercial radiator boosters</a>
available but some reviews say they are noisy and they all sit on top of
the radiator which would mean moving it everytime I closed the 
curtains.  So I decided to design and build my own.</p>

<h2 id="the-idea">The Idea</h2>

<p>Take a standard quick PC fan, mount it to the bottom of the radiator, 
create a duct to direct the air across the floor and build a circuit
to turn it on automatically when the radiator gets warm.</p>

<h2 id="the-fan">The Fan</h2>

<p>Rather conveniently the gap between the front and back panels of 
the double radiator is just over 80mm meaning a standard PC fan
will fit nicely.  I bought a Be Quiet Silentwings Pure 80mm fan
like this one from <a href="http://www.ebuyer.com/409820-be-quiet-silentwings-pure-80mm-bl041">ebuyer</a>
which turned out to be pretty much silent when running.</p>

<h2 id="the-circuit">The Circuit</h2>

<p>I needed a circuit that would switch on the 12V fan when the 
radiator warmed up and turn it off again when it cooled down.
I could have gone down the microcontroller route to do this, but 
it seemed like a fairly simple circuit with a temperature
sensor and a relay should be able to do the job.  After some time
googling I found exactly what I needed.  <a href="http://www.escol.com.my/Projects/Project-03%28Thermostat-1%29/Proj-03.html">This site</a> 
has done an excellent job of describing how to make a temperature 
controlled relay using a few basic electronics componets.  There are
kits for sale, but I chose to just buy the components and assemble
them on some strip board.</p>

<p><img src="http://swindon.hackspace.org.uk/blog/diy-radiator-booster/3.jpg" alt="Circuit" /></p>

<h2 id="the-ducting">The Ducting</h2>

<p>Initially I was planning on using some thin plywood or something
similar for the ducting.  However a few members of the hackspace
have 3D printers and kindly offered to print something for me.
So following on from a talk given at the hackspace some months
ago about how to <a href="https://groups.google.com/forum/#!topic/swindon-hackspace/PvvfdYWvo0c">use openscad</a> 
I decided to try and design a 3D printable enclosure.</p>

<p><img src="http://swindon.hackspace.org.uk/blog/diy-radiator-booster/4.jpg" alt="Ducting" /></p>

<p>It took a couple of attempts to get something that was printable, 
but with the help and advice of other members I managed to design
a nice curved duct with some fins and small box to mount the electronics 
in.  The design is available on <a href="http://www.thingiverse.com/thing:168527">thingiverse</a>.</p>

<h2 id="putting-it-all-together">Putting it all together</h2>

<p>With all the parts made and colder weather fast approaching I 
assembled everything and wired it up using and old 12V power
supply I had lying around.  Tuning the temperature at which the
fan comes on is as simple as adjusting the potentiometer
on the circuit board.  The fan doesn’t blast hot air out like a
fan heater does, but it does produce a gentle breeze of warm
air across the floor.  Whether it has made a huge difference
is hard to tell so far but I don’t think it can hurt.</p>

<p><img src="http://swindon.hackspace.org.uk/blog/diy-radiator-booster/5.jpg" alt="Complete" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Quadcopter Design and Build]]></title>
    <link href="http://swindon.hackspace.org.uk/blog/quadcopter-builds/"/>
    <updated>2013-09-26T19:08:00+01:00</updated>
    <id>http://swindon.hackspace.org.uk/blog/quadcopter-builds</id>
    
    <author>
      <name><![CDATA[Steve Wood, AKA Gyrobot]]></name>
    </author>
    
    <content type="html"><![CDATA[
<p>A couple of members are now putting the finishing touches to their quadcopter builds and proceeding into the upgrade phase (typical). The build process isn’t too difficult with the excellent DJI 450 quadcopter kit, which allows various options to be taken to reach each users end goal, whether it be simple flying or the more advanced (and costly) First Person Viewing (FPV) camera set-up.</p>

<!-- more -->

<p>From a hacking point of view, there are some areas of this hobby which lends itself really well to hacking. I personally have a 3D printer and CAD design skills, therefore items like camera mounts (GoPro etc.), electronics enclosures, landing skids etc. are all able to be designed and manufactured easily. From an electronics perspective there are various radio transmitter hacks or custom firmware mods can be pursued if required too.</p>

<p><a href="http://swindon.hackspace.org.uk/blog/quadcopter-builds/2.jpg"><img src="http://swindon.hackspace.org.uk/blog/quadcopter-builds/2-small.jpg" alt="Quadcopter First Flight" /></a></p>

<p>I will soon be presenting my quadcopter with on-board live video streaming to <a href="http://wilsar.org.uk/" title="http://wilsar.org.uk/">Wiltshire Search and Rescue</a>. They are extremely interested in seeing the the on-board camera footage with a view to help saving them many man hours of ground based searching. Also it will allow them to view inaccessible areas very quickly such as riverbanks and remote fields. The option to upload pre-programmed missions from Google Maps into the on-board Ardupilot control board then have the GPS navigation system take control at the flick of a switch also sounds appealing. Whole fields can be scanned in seconds and minutes.</p>

<p>These are eye-in-the-sky images that I have currently been getting through the on-board GoPro Hero 3:</p>

<p><a href="http://swindon.hackspace.org.uk/blog/quadcopter-builds/3.jpg"><img src="http://swindon.hackspace.org.uk/blog/quadcopter-builds/3-small.jpg" alt="Swindon Remote Control Car Club" /></a></p>

<p><a href="http://swindon.hackspace.org.uk/blog/quadcopter-builds/4.jpg"><img src="http://swindon.hackspace.org.uk/blog/quadcopter-builds/4-small.jpg" alt="Moredon Playing Fields" /></a></p>

<p><a href="http://swindon.hackspace.org.uk/blog/quadcopter-builds/5.jpg"><img src="http://swindon.hackspace.org.uk/blog/quadcopter-builds/5-small.jpg" alt="Wroughton Airfield" /></a></p>

<p><a href="http://swindon.hackspace.org.uk/blog/quadcopter-builds/6.jpg"><img src="http://swindon.hackspace.org.uk/blog/quadcopter-builds/6-small.jpg" alt="Wroughton and Swindon from Wroughton Airfield" /></a></p>

<p>Flight videos have been uploaded on YouTube too:</p>

<iframe src="http://www.youtube.com/embed/X6MDkSDx5UQ" frameborder="0" webkitallowfullscreen="" mozallowfullscreen="" allowfullscreen=""></iframe>
<iframe src="http://www.youtube.com/embed/ch740siWPGY" frameborder="0" webkitallowfullscreen="" mozallowfullscreen="" allowfullscreen=""></iframe>
<iframe src="http://www.youtube.com/embed/yl5OPOSkdmI" frameborder="0" webkitallowfullscreen="" mozallowfullscreen="" allowfullscreen=""></iframe>

<p>The next stage for me is to re-build my quad to a “spider style” configuration. This will be achieved by redesigning the central plates to orientate the forward arms out of the shot from the camera view. Click on the images below to download my CAD files from <a href="http://www.thingiverse.com/" title="http://www.thingiverse.com/">Thingiverse</a>.</p>

<p><a href="http://www.thingiverse.com/thing:160607"><img src="http://swindon.hackspace.org.uk/blog/quadcopter-builds/Render2.png" alt="Spyda 500 Quadcopter" /></a></p>

<p><a href="http://www.thingiverse.com/thing:160607"><img src="http://swindon.hackspace.org.uk/blog/quadcopter-builds/Render3.png" alt="Spyda 500 Quadcopter" /></a></p>

<p><a href="http://swindon.hackspace.org.uk/blog/quadcopter-builds/8.jpg"><img src="http://swindon.hackspace.org.uk/blog/quadcopter-builds/8-small.jpg" alt="Spyda 500 Quadcopter" /></a></p>

<p><a href="http://swindon.hackspace.org.uk/blog/quadcopter-builds/7.jpg"><img src="http://swindon.hackspace.org.uk/blog/quadcopter-builds/7-small.jpg" alt="Spyda 500 Quadcopter" /></a></p>

<p>And a GoPro Hero 3 mount that is fully printable :</p>

<p><a href="http://www.thingiverse.com/thing:163107"><img src="http://swindon.hackspace.org.uk/blog/quadcopter-builds/Render4.png" alt="Spyda 500 GoPro Hero 3 Mount" /></a></p>

<p>If you are interested in finding out more about this hobby then come along to the <a href="http://swindon.hackspace.org.uk/about/#weekly-meetings" title="http://swindon.hackspace.org.uk/about/">Swindon Hackspace</a> on a Wednesday night and have a chat with some like minded members.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Heathkit Hero 1 Printable Parts]]></title>
    <link href="http://swindon.hackspace.org.uk/blog/heathkit-hero-printable-parts/"/>
    <updated>2013-09-09T20:15:00+01:00</updated>
    <id>http://swindon.hackspace.org.uk/blog/heathkit-hero-printable-parts</id>
    
    <author>
      <name><![CDATA[Steve Wood, AKA Gyrobot]]></name>
    </author>
    
    <content type="html"><![CDATA[<p><em>As mentioned in a <a href="http://swindon.hackspace.org.uk/blog/2013-07-03-meeting-report/" title="http://swindon.hackspace.org.uk/blog/2013-07-03-meeting-report/">previous post</a>,
the hackspace has been working on getting an old <a href="http://en.wikipedia.org/wiki/HERO_(robot)">Heathkit Hero</a> robot up and running.</em></p>

<p>We are almost starting to build up a mini library of printable Heathkit Hero 1 parts. The latest edition is not so much a replacement but a component fix that should allow a broken robotic arm to be repaired and re-attached. A common problem is the area around the shoulder attachment of the arm body where the plastic goes brittle with age.</p>

<!-- more -->

<p>Whilst this repair will obviously make your robot un-original, it will salvage any broken arms and allow Hero to be fighting fit for an arm wrestle again. It has been designed sympathetically and if printed with grey plastic, it should blend in well and make Hero appear like it’s on steroids.</p>

<p>Other replacment printable parts for Heathkit Hero 1 designed at the Swindon Hackspace include new Grippers and a Wrist Joint :-</p>

<p><img src="http://thingiverse-production.s3.amazonaws.com/renders/e5/bb/db/11/45/arm-wrist_display_large.jpg" alt="Heathkit Hero Grippers" /></p>

<p>The source stl files for printing can be found on Thingiverse along with further instructions.</p>

<p>Grippers:
<a href="http://www.thingiverse.com/thing:67929" title="http://www.thingiverse.com/thing:67929">http://www.thingiverse.com/thing:67929</a></p>

<p><a href="http://www.thingiverse.com/thing:67929"><img src="http://thingiverse-production.s3.amazonaws.com/renders/e2/72/6a/48/aa/photo_display_medium.jpg" alt="http://www.thingiverse.com/thing:67929" /></a></p>

<p>Wrist Joint:
<a href="http://www.thingiverse.com/thing:70995" title="http://www.thingiverse.com/thing:70995">http://www.thingiverse.com/thing:70995</a></p>

<p><a href="http://www.thingiverse.com/thing:70995"><img src="http://thingiverse-production.s3.amazonaws.com/renders/f1/41/05/97/fc/photo2_display_medium.jpg" alt="http://www.thingiverse.com/thing:70995" /></a></p>

<p>Arm Repair:
<a href="http://www.thingiverse.com/thing:158652" title="http://www.thingiverse.com/thing:158652">http://www.thingiverse.com/thing:158652</a></p>

<p><a href="http://www.thingiverse.com/thing:158652"><img src="http://thingiverse-production.s3.amazonaws.com/renders/00/34/0e/e4/95/DSCF9328_display_large.jpg" alt="http://www.thingiverse.com/thing:158652" /></a></p>

<p>For more information about Hero please visit :</p>

<p><a href="http://theoldrobots.com/hero1.html" title="http://theoldrobots.com/hero1.html">http://theoldrobots.com/hero1.html</a></p>

<p>A couple more images of Hero on our blog post :
<a href="http://swindon.hackspace.org.uk/blog/2013-07-03-meeting-report/" title="http://swindon.hackspace.org.uk/blog/2013-07-03-meeting-report/">2013-07-03-meeting-report</a></p>

<p>Either come along to the <a href="http://swindon.hackspace.org.uk/about/#weekly-meetings" title="http://swindon.hackspace.org.uk/about/">Swindon Hackspace</a> on a Wednesday night or the <a href="http://www.museumofcomputing.org.uk/exhibitions/2-current-exhibitions/108-robots-revealed" title="http://www.museumofcomputing.org.uk/exhibitions/2-current-exhibitions/108-robots-revealed">Robots Revealed</a> exhibition at the <a href="http://www.museum-of-computing.org.uk/" title="http://www.museum-of-computing.org.uk/">Swindon Museum of Computing</a> for the next few months to have a closer look.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meeting Report - 3rd July 2013]]></title>
    <link href="http://swindon.hackspace.org.uk/blog/2013-07-03-meeting-report/"/>
    <updated>2013-07-03T00:00:00+01:00</updated>
    <id>http://swindon.hackspace.org.uk/blog/meeting-report</id>
    
    <author>
      <name><![CDATA[Rob]]></name>
    </author>
    
    <content type="html"><![CDATA[<p>Quite a busy night at the Swindon Hackspace tonight. Welcome to the five(!) new people who turned up to see what we get up to at our weekly meetings, hope you had an enjoyable evening and we’ll see you again next week. Along with the regulars it made for a pretty full room. After resetting a few trip switches to sort out some power issues the evening got underway with a bit of chat about what we do, complimented by drinks and some biscuits brought in by a couple of our regulars, James and Jess.</p>

<p><img src="http://swindon.hackspace.org.uk/blog/2013-07-03-meeting-report/Hackspace.jpg" alt="Hero" /></p>

<!-- more -->

<p>James and Jess also turned up with some funky little electronic Cube World games, so we all spent a while trying to work out what they do. As far as we managed to work out, each cube contains a little character who you can control and play a simple game with. Clip the cubes together and the characters will move between the cubes and interact with each other. Information on the internet seems sparse, even <a href="http://en.wikipedia.org/wiki/Radica_Games">Wikipedia</a>  doesn’t appear to have a page. There is a <a href="http://service.mattel.com/instruction_sheets/i6063.pdf">manual</a> available for download from the Mattel website and plenty for sale on <a href="http://www.ebay.co.uk/sch/i.html?_nkw=mattel+cube+world+series">ebay</a> if you fancy getting some.</p>

<p><img src="http://swindon.hackspace.org.uk/blog/2013-07-03-meeting-report/CubeWorld.jpg" alt="Cube World Series" /></p>

<p>In the mean-time people rummaged through the selection of 3D printed items Steve had brought in and he chatted with some of the newcomers about 3D printing showing off some of his excellent 3D prints and designs.</p>

<p>Simon brought in the <a href="http://robosavvy.com/store/product_info.php/products_id/1206?osCsid=31b1a0e3c1d9c27c6c802d752bd477c5">robot arm</a> he’d recently bought for the <a href="http://www.museumofcomputing.org.uk/">Swindon Museum of Computing</a> <a href="http://www.museumofcomputing.org.uk/exhibitions/2-current-exhibitions/108-robots-revealed">robots revealed exhibition</a>.  He was having some trouble getting it to work reliably. After a some messing around we discovered that powering the servos from 6V rather than 5V resolved the problem. There is a short video of it in action on <a href="http://www.youtube.com/watch?v=QEHG0bBv5ys">YouTube</a></p>

<p><img src="http://swindon.hackspace.org.uk/blog/2013-07-03-meeting-report/RobotArm.jpg" alt="Robot Arm" /></p>

<p>The hackspace has recently been working on getting an old <a href="http://en.wikipedia.org/wiki/HERO_(robot)">Heathkit Hero</a> robot to work (but we’ve not been making much progress recently in all honesty!)  One of the members has 3D printed some replacement parts for the arm and we need to replace some of the wiring inside after it was, er, accidentally shorted out during some testing.  It has been commandeered back into the museum for the robot exhibition so we spent a bit of time refitting its outer panels and reattaching the repaired arm ready for display.</p>

<p><img src="http://swindon.hackspace.org.uk/blog/2013-07-03-meeting-report/Hero2.jpg" alt="Hero" /></p>

<p>As a few members headed off home leaving the die-hards, James set up the oscilloscope to have a poke around in his Blu-ray player with the hope of doing some hacking on it and we pondered the issues we’ve been having with the internet connection recently.</p>

<p>All in all a fairly busy and entertaining evening. Sorry if I’ve missed off anything else that people were doing but there way too much going on to see and hear everything.</p>

<p>Rob.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gyrobot Resurrection]]></title>
    <link href="http://swindon.hackspace.org.uk/blog/gyrobot-resurrection/"/>
    <updated>2013-06-28T00:00:00+01:00</updated>
    <id>http://swindon.hackspace.org.uk/blog/gyrobot-resurrection</id>
    
    <author>
      <name><![CDATA[Steve Wood, AKA Gyrobot]]></name>
    </author>
    
    <content type="html"><![CDATA[<p>Gyrobot was made available to the <a href="http://www.museum-of-computing.org.uk/" title="http://www.museum-of-computing.org.uk/">Swindon Museum of Computing</a> on Hackspace night; 19th June 2013 for their upcoming <a href="http://www.museumofcomputing.org.uk/exhibitions/2-current-exhibitions/108-robots-revealed" title="http://www.museumofcomputing.org.uk/exhibitions/2-current-exhibitions/108-robots-revealed">Robots Revealed</a> exhibition.</p>

<p>For those that are not familiar with Gyrobot, it was my (Steve Wood) entry into the UK Robot Wars series 6 and 7, back in 2002.</p>

<!-- more -->

<p>Gyrobot originally started its journey in 2000 with myself, a Robot Wars fan deciding to design and build a Swindon entry for the UK version of Robot Wars. 3 years later and after 1 failed audition, it appeared on Series 7 which was filmed in Nottingham August 2003 and screened in November.</p>

<p><img src="http://swindon.hackspace.org.uk/blog/gyrobot-resurrection/gyrobot.jpg" alt="Gyrobot" /></p>

<p>This entry was named Gyrobot from the word Gyrate which is to spin/revolve and to rotate in circles, and erm - robot! Also “Gyro” is short for gyroscope, a device that spins. I have now affectionately adopted this name for many of my online avatars, my design and 3D printing company is unashamedly named after it too (<a href="http://www.gyrobot.co.uk" title="http://www.gyrobot.co.uk">Gyrobot Ltd</a>).</p>

<h2 id="interesting-facts-about-gyrobot-">Interesting Facts About Gyrobot :</h2>

<ol>
  <li>I believe Gyrobot is the smallest heavyweight in the world (100kg category). Challenge this fact if you can. Dia 700mm x 150mm.</li>
  <li>Gyrobot has no interior orientation, top can be bottom and bottom can be top, a truly symmetrical robot in all directions.</li>
  <li>Gyrobot has no weak side, all angles of opponents attack are catered for.</li>
  <li>Gyrobot’s best form of attack is it’s defence. To get near it be prepared to get damaged!!</li>
  <li>The energy stored in Gyrobot’s 35 kg outer weapon rim when up to full speed (750 RPM) is 40KJoules (Validated by two independent sources). Compare that with current Hypnodisc’s 12KJoules. Energy is even higher when Gyrobot is in full body spin mode.</li>
</ol>

<p><img src="http://swindon.hackspace.org.uk/blog/gyrobot-resurrection/gyrobot_closer.jpg" alt="Gyrobot_closer" /></p>

<p>Either come along to the <a href="http://swindon.hackspace.org.uk/about/#weekly-meetings" title="http://swindon.hackspace.org.uk/about/">Swindon Hackspace</a> on a Wednesday night or the <a href="http://www.museumofcomputing.org.uk/exhibitions/2-current-exhibitions/108-robots-revealed" title="http://www.museumofcomputing.org.uk/exhibitions/2-current-exhibitions/108-robots-revealed">Robots Revealed</a> exhibition at the <a href="http://www.museum-of-computing.org.uk/" title="http://www.museum-of-computing.org.uk/">Swindon Museum of Computing</a> for the next 6 months to have a closer look, but please - not available to hack, one false move and it bites back hard ;-)</p>

<h2 id="further-gyrobot-information-">Further Gyrobot Information :</h2>

<p>Original Website:
<a href="http://homepage.ntlworld.com/steve-wood/home.htm" title="http://homepage.ntlworld.com/steve-wood/home.htm">http://homepage.ntlworld.com/steve-wood/home.htm</a></p>

<iframe src="http://www.youtube.com/embed/KaWaZ5FgJeg" frameborder="0" webkitallowfullscreen="" mozallowfullscreen="" allowfullscreen=""></iframe>
<iframe src="http://www.youtube.com/embed/6dnohbcRkms" frameborder="0" webkitallowfullscreen="" mozallowfullscreen="" allowfullscreen=""></iframe>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[First Year Anniversary Meet Up]]></title>
    <link href="http://swindon.hackspace.org.uk/blog/first-year-anniversary-meet-up/"/>
    <updated>2013-06-13T20:06:00+01:00</updated>
    <id>http://swindon.hackspace.org.uk/blog/first-year-anniversary-meet-up</id>
    
    <author>
      <name><![CDATA[Steve Wood, AKA Gyrobot]]></name>
    </author>
    
    <content type="html"><![CDATA[<p>On June 5th we celebrated our 1st year anniversary. Rather than attend a usual meet we decided to relocate the Hackspace to the more informal surroundings of the <a href="http://swindonhistory.blogspot.co.uk/2011/12/sir-daniel-arms.html" title="http://swindonhistory.blogspot.co.uk/2011/12/sir-daniel-arms.html">Sir Daniel Arms</a> for a bite to eat and some drinks:</p>

<p>We met at the <a href="http://www.museum-of-computing.org.uk/" title="http://www.museum-of-computing.org.uk/">Museum of Computing</a> between 6:30 and 7pm, left a map to the pub for any late shows before taking the short walk down town. An unusual collection of reprobates we must have looked, but soon realising that we actually fitted in quite well with the other townsfolk. It’s cool not to be cool I always tell my kids.
<!-- more --></p>

<p><img src="http://swindon.hackspace.org.uk/blog/first-year-anniversary-meet-up/Sir Daniel Arms.jpg" alt="Sir Daniel Arms" /></p>

<p>When we arrived at the pub, it was surprisingly busy, with all the tables seemingly taken. However we soon flexed our substantial muscles and hacked together a collection of smaller seats, stools, loungers to make some sort of makeshift eating area.</p>

<p><strong>Our simple pub review:</strong></p>

<blockquote>
  <p>“Beer was great, prices were very cheap, food was ‘fine’, bartender girl was the most miserable ever, waitress however was nice and chatty.”</p>
</blockquote>

<p>Those lucky attendees who turned up were rewarded with a hot off the printbed Swindon Hackspace multi-coloured poker chip, worth 1 Gigillion credits, accepted in no respectable establishments worldwide. Even the waitress was curious as to what it was, “a badge of shame” she was told, only surpassed by McDonald’s zero stars:-</p>

<p><img src="http://swindon.hackspace.org.uk/blog/first-year-anniversary-meet-up/3D Prints.jpg" alt="Sneak preview of the new Swindon Hackspace Logo" /></p>

<p>Tony showed a collection of prints from his new Replicator 3D printer. Looking forward to seeing some more.</p>

<p>Conversation was good, many subjects covered and not all hackey. We sort of flirted with the following ideas, but nothing as usual in concrete:-</p>

<ul>
  <li>Collaborative Hackspace projects (3D printer).</li>
  <li>Visit to Bristol and possibly Oxford Hackspaces.</li>
  <li>Contact first timers for feedback.</li>
  <li>Another publicity drive.</li>
  <li>Some web site glitches which need to be discussed with Jamie.</li>
  <li>Increased blog activity, which is why I was volunteered for this entry ;-)</li>
</ul>

<p>Which leads me to signing off this entry with a congratulations to hackspace members on achieving our paper anniversary.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Twitter To Teletype]]></title>
    <link href="http://swindon.hackspace.org.uk/blog/twitter-to-teletype/"/>
    <updated>2012-11-06T20:06:00+00:00</updated>
    <id>http://swindon.hackspace.org.uk/blog/twitter-to-teletype</id>
    
    <author>
      <name><![CDATA[Rob]]></name>
    </author>
    
    <content type="html"><![CDATA[<p>The <a href="http://www.museum-of-computing.org.uk/">Museum of Computing</a> in Swindon has a working Teletype and a desire to get it to print out tweets as part of a display in the museum.  Since the <a href="http://swindon.hackspace.org.uk">Swindon Hackspace</a> is based in the museum it was a perfect project for hackspace members.</p>

<p><img src="http://swindon.hackspace.org.uk/blog/twitter-to-teletype/Teletype.jpg" alt="Teletype" /></p>

<!-- more -->

<h2 id="current-loop-interface">Current Loop Interface</h2>

<p>The teletype uses a current loop interface to communicate with other (teletype) devices.  The current loop interface is similar to a standard RS232 serial interface found on a PC except rather than using changes in voltage to represent 0’s and 1’s it uses changes in current.  Data is sent at 110 baud - very slowly compared to modern standards, but this is as fast as the teletype can print characters and it has no means to buffer the data it receives.</p>

<p>After a few failed attempts and fried components a circuit was built to convert from RS232 serial into current loop using…. [ <em>what?, circuit diagram?, any more info?</em> ]</p>

<p><img src="http://swindon.hackspace.org.uk/blog/twitter-to-teletype/CurrentLoopConverter.jpg" alt="Current Loop Converter" /></p>

<p>The teletype also uses a slightly different character set to standard ASCII so a character set conversion was required.  This conversion implemented in the C# code running on the Raspberry Pi. This also allowed for use of some of the mechanical functions of the teletype such as the bell which you can hear ring as the teletype prints out a tweet</p>

<p><a href="https://github.com/snhack/TwitterToTeletype/wiki/images/TeletypeCharMap.png">Character Map Table</a></p>

<h2 id="mechanical-issues">Mechanical Issues?</h2>

<p>The teletype is mainly a mechanical device and contains only a single circuit board consisting of a few resistors, diodes and transistors <em>photo required</em>  Many of the hardest problems to overcome turned out to be mechanical rather than electronic or software problems.</p>

<p>Upon initially managing to send data to the teletype over and RS232 port and via the current loop converter many characters were being printed out incorrectly.  After reading the teletype manuals found online it was discovered that there was a mechanical adjustment lever at the back of the teletype which controlled the alignment of some cogs used in decoding the character data sent over the current loop.  After a few minor adjustments with this lever most characters now print correctly.</p>

<p><img src="http://swindon.hackspace.org.uk/blog/twitter-to-teletype/LeverPostion.jpg" alt="Lever Position" /></p>

<p>You may notice that the teletype still occasionally prints the wrong character.  This is down to mechanical issues rather than any software or electronic fault and is simply due to the age of the machine and worn mechanical components.</p>

<h2 id="whats-with-all-the-noise">Whats With All The Noise?</h2>

<p>Because the teletype is a mechanical device which uses moving parts to decode the data it receives it has to be running continuously and hence makes a lot of noise even when not printing text.  In order to minimize the noise generated when the teletype wasn’t printing anything a circuit was created using an ATTiny2313 (similar to the programmable chip used in an Arduino) and a relay to turn the power to the teletype on just before data was due to be sent and off once the printing was complete.  This chip was also programmed to bridge the connection from USB on the Raspberry Pi to the serial data that was needed to send to the current loop converter to talk to the teletype.</p>

<p><img src="http://swindon.hackspace.org.uk/blog/twitter-to-teletype/UsbSwitch.jpg" alt="USB Switch" />
<img src="http://swindon.hackspace.org.uk/blog/twitter-to-teletype/UsbSwitch2.jpg" alt="USB Switch" /></p>

<h2 id="getting-tweets-and-putting-it-all-together">Getting Tweets And Putting It All Together</h2>

<p>A C# application was written to connect to the twitter API and pickup tweets sent to the museums twitter account.  Running under Mono on Linux, this software then communicates with the ATTiny micro-controller via a USB to serial converter and sends instructions to turn the teletype on.  It then sends the text of the tweet in 50 character chunks (due to memory limitations on the ATTiny) to be forwarded on to the current loop interface at 110 baud and finally the teletype prints out the tweet.</p>

<iframe src="http://www.youtube.com/embed/_HGV4Ppnx14" frameborder="0" webkitallowfullscreen="" mozallowfullscreen="" allowfullscreen=""></iframe>

<p><img src="http://swindon.hackspace.org.uk/blog/twitter-to-teletype/TeletypeComplete.jpg" alt="Complete" />
<img src="http://swindon.hackspace.org.uk/blog/twitter-to-teletype/TeletypePaper.jpg" alt="Printing" /></p>

<h2 id="more-information">More Information</h2>

<ul>
  <li><a href="http://swindon.hackspace.org.uk">Swindon Hackspace</a></li>
  <li><a href="http://www.museum-of-computing.org.uk/">Museum of Computing</a></li>
  <li><a href="http://en.wikipedia.org/wiki/Teletype_Model_33">Model 33 Teletype on Wikipedia</a></li>
  <li><a href="http://en.wikipedia.org/wiki/Current_loop">Current loop on Wikipedia</a></li>
  <li><a href="https://github.com/snhack/TwitterToTeletype">Source Code</a></li>
  <li><a href="http://www.raspberrypi.org/">Raspberry Pi</a></li>
</ul>

<p><em>This article was originally posted at: <a href="https://github.com/snhack/TwitterToTeletype/wiki">TwitterToTeletype/wiki</a></em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Resources for Using Git]]></title>
    <link href="http://swindon.hackspace.org.uk/blog/resources-for-using-git/"/>
    <updated>2012-09-29T20:35:00+01:00</updated>
    <id>http://swindon.hackspace.org.uk/blog/resources-for-using-git</id>
    
    <author>
      <name><![CDATA[Jamie Osborne]]></name>
    </author>
    
    <content type="html"><![CDATA[<p>Here’s some basic resources to get started pushing code to github.</p>

<p>Note: As well as computer source code, git is useful for tracking changes to anything that can be represented as plain text, e.g. <a href="http://www.wired.com/wiredenterprise/2012/08/bundestag/">German Law</a>.</p>

<p>The simplest use of git is to create the repo locally, stored in the same folder as the source (known as the working tree) and named <code>.git</code>.</p>

<!-- more -->

<p>To <a href="http://git-scm.com/docs/git-init">initialise</a> a new git repo, simply run <code>git-init</code>.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><pre><code class="sh"><span class="line"><span class="nv">$ </span><span class="nb">cd </span>my-project
</span><span class="line"><span class="nv">$ </span>git init
</span><span class="line">Initialized empty Git repository in my-project/.git/
</span></code></pre></div></figure></notextile></div>

<p><a href="http://git-scm.com/docs/git-add">Add</a> any new or changed files you want to track, then <a href="http://git-scm.com/docs/git-commit">commit</a> those changes to the repo, along with a <a href="http://xkcd.com/1296/">descriptive</a> message.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><pre><code class="sh"><span class="line"><span class="nv">$ </span><span class="nb">echo </span>About My-Project &gt; README.md
</span><span class="line"><span class="nv">$ </span>git add . <span class="c"># add all files recursively</span>
</span><span class="line"><span class="nv">$ </span>git commit -m <span class="s1">&#39;First Commit&#39;</span>
</span><span class="line"><span class="o">[</span>master <span class="o">(</span>root-commit<span class="o">)</span> cdab15f<span class="o">]</span> First Commit
</span><span class="line"> 1 file changed, 1 insertion<span class="o">(</span>+<span class="o">)</span>
</span><span class="line"> create mode 100644 README.md
</span></code></pre></div></figure></notextile></div>

<p><a href="http://git-scm.com/docs/git-log">View recent commits</a> using <code>git log</code>.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><pre><code class="sh"><span class="line"><span class="nv">$ </span>git log
</span><span class="line">commit cdab15f2036b0b8b1c8fbfceab6357c8e56a0d5f
</span><span class="line">Author: Jamie Osborne &lt;jmeosbn@your-email.com&gt;
</span><span class="line">Date:   Sat Sep 29 23:30:20 2012 +0100
</span><span class="line">
</span><span class="line">    First Commit
</span></code></pre></div></figure></notextile></div>

<h2 id="online-collaboration">online collaboration</h2>

<p>To collaborate on a project using Git, an online service such as
<a href="http://github.com/">Github</a> is used to hold a repo and allow others to access it. To
propose changes to somebody else’s repo, a <a href="https://help.github.com/articles/fork-a-repo">fork</a> <code>-&gt;</code> <a href="https://help.github.com/articles/branching-out/">branch</a> <code>-&gt;</code> <a href="https://help.github.com/articles/using-pull-requests">pull-request</a> process is used.</p>

<ul>
  <li>
    <p>First <a href="https://help.github.com/articles/fork-a-repo">fork</a> a new personal copy of the existing repo, then <a href="https://help.github.com/articles/importing-a-git-repository-using-the-command-line/">clone</a> that new fork onto
your local computer.</p>
  </li>
  <li>
    <p>A new “topic” <a href="https://help.github.com/articles/branching-out/">branch</a> should be used for each pull request. Commiting directly to the <code>master</code> branch (or any other branch that recieves commits by others) will likely complicate merging of your commits upstream - as will mixing unrelated changes
into the same branch.</p>

    <p><em>Note that all additional commits made to a branch will automatically be added to a
pull request made with that branch.</em> This makes it really easy to add commits to a pull
request - just be careful not to commit any unrelated work to a branch that’s already
used in an open pull request.</p>
  </li>
  <li>
    <p>Once you have committed some changes to the new branch, and <a href="https://help.github.com/articles/pushing-to-a-remote/">pushed</a> those changes to
Github, use the Github website to send a <a href="https://help.github.com/articles/using-pull-requests">pull request</a> to the project’s owner.</p>

    <p>You can view the progress of your pull request in it’s <a href="https://github.com/snhack/snhack.github.com/issues">discussion thread</a>, where you
may get feedback on your changes before they can be merged. Notifications will normally
be sent by email to those active or mentioned in the thread, as well as those watching
either the thread or the related repo.</p>
  </li>
</ul>

<h2 id="documentation">documentation</h2>

<p>Git itself can be installed from <a href="http://git-scm.com/downloads">git-scm.com</a> if your OS doesn’t already include it. The same site also hosts a copy of the <a href="http://git-scm.com/docs">documentation</a>, as well as the <a href="http://git-scm.com/book">Pro Git book</a> which is a great place to start learning git.  Pro Git is also available as a commercially <a href="http://www.amazon.com/gp/product/1430218339?ie=UTF8&amp;tag=prgi-20&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=1430218339">printed book</a> from Apress, and as a free <a href="https://github.s3.amazonaws.com/media/progit.epub">ePub</a>, <a href="https://github.s3.amazonaws.com/media/pro-git.en.mobi">mobi</a>, or <a href="https://github.s3.amazonaws.com/media/progit.en.pdf">PDF</a> download.</p>

<p>If you don’t fancy reading an entire book, then this <a href="http://www.vogella.com/articles/Git/article.html">Git Tutorial</a> gets straight to the point for those already familiar with the concepts of version control.  There’s minimal explanatory text, but full command examples for most operations; making it a useful resource for commands you use rarely and need to quickly relearn.  Also, <a href="http://wildlyinaccurate.com/a-hackers-guide-to-git">A Hacker’s Guide to Git</a> is <a href="https://twitter.com/astrofraggle/status/471596975612502016">recommended</a> as being very readable.</p>

<p>Github’s <a href="http://help.github.com">help site</a> has some good pages on using both git, and the github website.  In particular, see <a href="https://help.github.com/categories/54/articles">Github Bootcamp</a> for links to the basics, and <a href="https://try.github.io/">Try Git</a> for a live tutorial.</p>

<h2 id="graphical-interfaces">graphical interfaces</h2>

<p>While it’s good to know how to use git from the command line, it’s worth getting a GUI for easier building of commits etc. (you could also integrate it with your favourite editor and diff viewer)</p>

<p><a href="http://github.com/">Github</a> offers their own <a href="http://mac.github.com/">Mac</a> and <a href="http://windows.github.com/">Windows</a> GUI clients, which have the advantage of closer integration with some of github’s features, such as organisations and the “Clone in Windows/Mac” button found on each repo on github.</p>

<p><img src="http://swindon.hackspace.org.uk/blog/resources-for-using-git/promo-screenshot.png" alt="GitHub for Mac" /></p>

<p>They do lack some more advanced features though so I mostly prefer <a href="http://gitx.laullon.com/">GitX</a> on the Mac. Plenty more GUIs exist <a href="http://git-scm.com/downloads/guis">on various platforms</a>, including <a href="http://www.sourcetreeapp.com/">SourceTree</a> and <a href="http://www.syntevo.com/smartgithg/">SmartGit</a>.</p>

<p><img src="http://swindon.hackspace.org.uk/blog/resources-for-using-git/commit.png" alt="GitX" /></p>

<h2 id="other-info">other info</h2>

<p>Btw, if you just want to share some code snippets somewhere while maintaining versioning etc., then check out <a href="https://gist.github.com/">gists</a>, a feature of github.</p>

<p><em>This article was originally posted at: <a href="http://jmeosbn.github.com/blog/resources-for-using-git/">http://jmeosbn.github.com</a></em></p>
]]></content>
  </entry>
  
</feed>
